<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss
  version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:wfw="http://wellformedweb.org/CommentAPI/"
  
>
  <channel>
    <title>Http on Ko-Da-Wa-Ri</title>
    <link>http://localhost:1313/tags/http/</link>
    <description>Recent content in Http on Ko-Da-Wa-Ri</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 21 Jul 2022 22:04:39 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AndroidでgetとPOST</title>
      <link>http://localhost:1313/posts/android%E3%81%A7get%E3%81%A8post/</link>
      <pubDate>Thu, 21 Jul 2022 22:04:39 +0900</pubDate>
      <guid>http://localhost:1313/posts/android%E3%81%A7get%E3%81%A8post/</guid>
      <description>&lt;p&gt;こんな感じ&lt;/p&gt;&#xA;&lt;h2 id=&#34;get&#34;&gt;GET&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-aidl&#34; data-lang=&#34;aidl&#34;&gt; public String getHistoryData(String key1) {&#xA;        HttpURLConnection urlConnection = null;&#xA;        InputStream inputStream = null;&#xA;        String result = &amp;#34;&amp;#34;;&#xA;        String str = &amp;#34;&amp;#34;;&#xA;        try {&#xA;            URL url = new URL(&amp;#34;https://xxxxx.co.jp/test?key1=&amp;#34; + key1);&#xA;            // 接続先URLへのコネクションを開く．まだ接続されていない&#xA;            urlConnection = (HttpURLConnection) url.openConnection();&#xA;            // 接続タイムアウトを設定&#xA;            urlConnection.setConnectTimeout(10000);&#xA;            // レスポンスデータの読み取りタイムアウトを設定&#xA;            urlConnection.setReadTimeout(10000);&#xA;            // ヘッダーにUser-Agentを設定&#xA;            urlConnection.addRequestProperty(&amp;#34;User-Agent&amp;#34;, &amp;#34;Android&amp;#34;);&#xA;            // ヘッダーにAccept-Languageを設定&#xA;            urlConnection.addRequestProperty(&amp;#34;Accept-Language&amp;#34;, Locale.getDefault().toString());&#xA;            // HTTPメソッドを指定&#xA;            urlConnection.setRequestMethod(&amp;#34;GET&amp;#34;);&#xA;            //リクエストボディの送信を許可しない&#xA;            urlConnection.setDoOutput(false);&#xA;            //レスポンスボディの受信を許可する&#xA;            urlConnection.setDoInput(true);&#xA;            // 通信開始&#xA;            urlConnection.connect();&#xA;            // レスポンスコードを取得&#xA;            int statusCode = urlConnection.getResponseCode();&#xA;            // レスポンスコード200は通信に成功したことを表す&#xA;            if (statusCode == 200) {&#xA;                inputStream = urlConnection.getInputStream();&#xA;                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, &amp;#34;utf-8&amp;#34;));&#xA;                // 1行ずつレスポンス結果を取得しstrに追記&#xA;                result = bufferedReader.readLine();&#xA;                while (result != null) {&#xA;                    str += result;&#xA;                    result = bufferedReader.readLine();&#xA;                }&#xA;                bufferedReader.close();&#xA;            }&#xA;        } catch (MalformedURLException e) {&#xA;            e.printStackTrace();&#xA;        } catch (IOException e) {&#xA;            e.printStackTrace();&#xA;        }&#xA;        // レスポンス結果のJSONをString型で返す&#xA;        return str;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;post&#34;&gt;POST&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-aidl&#34; data-lang=&#34;aidl&#34;&gt;public String PostUserName(String key1, String key2) {&#xA;        HttpURLConnection urlConnection = null;&#xA;        InputStream inputStream = null;&#xA;        String result = &amp;#34;&amp;#34;;&#xA;        String str = &amp;#34;&amp;#34;;&#xA;&#xA;        try {&#xA;            URL url = new URL(&amp;#34;http://hpph;e.cp.jp&amp;#34;&amp;#34;);&#xA;            // 接続先URLへのコネクションを開く．まだ接続されていない&#xA;            urlConnection = (HttpURLConnection) url.openConnection();&#xA;            // 接続タイムアウトを設定&#xA;            urlConnection.setConnectTimeout(10000);&#xA;            // レスポンスデータの読み取りタイムアウトを設定&#xA;            urlConnection.setReadTimeout(10000);&#xA;            // ヘッダーにUser-Agentを設定&#xA;            urlConnection.addRequestProperty(&amp;#34;User-Agent&amp;#34;, &amp;#34;Android&amp;#34;);&#xA;            // ヘッダーにAccept-Languageを設定&#xA;            urlConnection.addRequestProperty(&amp;#34;Accept-Language&amp;#34;, Locale.getDefault().toString());&#xA;            //ヘッダーにContent-Typeを設定する&#xA;            urlConnection.addRequestProperty(&amp;#34;Content-Type&amp;#34;, &amp;#34;application/x-www-form-urlencoded&amp;#34;);&#xA;            // HTTPメソッドを指定&#xA;            urlConnection.setRequestMethod(&amp;#34;POST&amp;#34;);&#xA;&#xA;            urlConnection.setUseCaches(false);&#xA;            //リクエストボディの送信を許可しない&#xA;            urlConnection.setDoOutput(true);&#xA;            //レスポンスボディの受信を許可する&#xA;            urlConnection.setDoInput(true);&#xA;            // 通信開始&#xA;            urlConnection.connect();&#xA;&#xA;&#xA;            //ステップ5:リクエストボディの書き出しを行う。&#xA;            OutputStream outputStream = urlConnection.getOutputStream();&#xA;            Map&amp;lt;String, String&amp;gt; keyValues = new HashMap&amp;lt;&amp;gt;();&#xA;&#xA;            keyValues.put(&amp;#34;key1&amp;#34;, key1);&#xA;            keyValues.put(&amp;#34;key2&amp;#34;, key2);&#xA;&#xA;&#xA;            if (keyValues.size() &amp;gt; 0) {&#xA;                Uri.Builder builder = new Uri.Builder();&#xA;                //HashMapを[key=value]形式の文字列に変換する&#xA;                for (String key : keyValues.keySet()) {&#xA;                    //[key=value]形式の文字列に変換する。&#xA;                    builder.appendQueryParameter(key, keyValues.get(key));&#xA;                }&#xA;                //[key=value&amp;amp;key=value…]形式の文字列に変換する。&#xA;                String join = builder.build().getEncodedQuery();&#xA;                PrintStream ps = new PrintStream(outputStream);&#xA;                ps.print(join);&#xA;                ps.close();&#xA;            }&#xA;            outputStream.close();&#xA;&#xA;            // レスポンスコードを取得&#xA;            int statusCode = urlConnection.getResponseCode();&#xA;            // レスポンスコード200は通信に成功したことを表す&#xA;            if (statusCode == 200) {&#xA;                inputStream = urlConnection.getInputStream();&#xA;                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, StandardCharsets.UTF_8));&#xA;                // 1行ずつレスポンス結果を取得しstrに追記&#xA;                result = bufferedReader.readLine();&#xA;                while (result != null) {&#xA;                    str += result;&#xA;                    result = bufferedReader.readLine();&#xA;                }&#xA;                bufferedReader.close();&#xA;            }&#xA;        } catch (MalformedURLException e) {&#xA;            e.printStackTrace();&#xA;        } catch (IOException e) {&#xA;            e.printStackTrace();&#xA;        }&#xA;        // レスポンス結果のJSONをString型で返す&#xA;        return str;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
      
    </item>
  </channel>
</rss>
