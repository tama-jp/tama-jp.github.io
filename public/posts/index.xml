<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ko-Da-Wa-Ri</title>
    <link>http://localhost:61372/posts/</link>
    <description>Recent content in Posts on Ko-Da-Wa-Ri</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 26 Sep 2024 19:38:11 +0900</lastBuildDate>
    <atom:link href="http://localhost:61372/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ITerm2で起動時にTip of the Dayを出さない</title>
      <link>http://localhost:61372/posts/2024-09-26-19-38-11-iterm2%E3%81%A7%E8%B5%B7%E5%8B%95%E6%99%82%E3%81%ABtip-of-the-day%E3%82%92%E5%87%BA%E3%81%95%E3%81%AA%E3%81%84/</link>
      <pubDate>Thu, 26 Sep 2024 19:38:11 +0900</pubDate>
      <guid>http://localhost:61372/posts/2024-09-26-19-38-11-iterm2%E3%81%A7%E8%B5%B7%E5%8B%95%E6%99%82%E3%81%ABtip-of-the-day%E3%82%92%E5%87%BA%E3%81%95%E3%81%AA%E3%81%84/</guid>
      <description>&lt;p&gt;iTerm2で起動時に左上に表示される「Tip of the Day（今日のTip）」を非表示にする方法&lt;/p&gt;&#xA;&lt;p&gt;Term2の環境設定の［Advanced］タブ内に「Tip of the Day」セクションがあるので、&#xA;「Disable the Tip of the Day?」項目がデフォルトだと「No」になっているので「Yes」に変更する。&lt;/p&gt;</description>
    </item>
    <item>
      <title>iPhone等のアイコンを作る</title>
      <link>http://localhost:61372/posts/2024-05-21-00-08-05-iphone%E7%AD%89%E3%81%AE%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E4%BD%9C%E3%82%8B/</link>
      <pubDate>Tue, 21 May 2024 00:08:05 +0900</pubDate>
      <guid>http://localhost:61372/posts/2024-05-21-00-08-05-iphone%E7%AD%89%E3%81%AE%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E3%82%92%E4%BD%9C%E3%82%8B/</guid>
      <description>&lt;p&gt;1024x1024 の画像をもとに、iPhone等のiconを作るるのに、ImageMgicを使います。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;!/usr/bin/env bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 20x20 Icon-20@1x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 40x40 Icon-20@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 60x60 Icon-20@3x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 29x29 Icon-29@1x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 58x58 Icon-29@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 87x87 Icon-29@3x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 40x40 Icon-40@1x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 80x80 Icon-40@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 120x120 Icon-40@3x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 120x120 Icon-60@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 180x180 Icon-60@3x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 76x76 Icon-76@1x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 152x152 Icon--76@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 167x167 Icon-83.5@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 512x512 iTunesArtwork.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert $1 -geometry 1024x1024 iTunesArtwork@2x.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Dispatch</title>
      <link>http://localhost:61372/posts/2024-05-16-08-15-33-dispatch/</link>
      <pubDate>Thu, 16 May 2024 08:15:34 +0900</pubDate>
      <guid>http://localhost:61372/posts/2024-05-16-08-15-33-dispatch/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-objective_c&#34; data-lang=&#34;objective_c&#34;&gt;dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{&#xA;    // バックグランドでAPIなどを実行&#xA;});&#xA;&#xA;dispatch_async(dispatch_get_main_queue(), ^{&#xA;    // メインスレッドで処理をしたい内容、UIを変更など。&#xA;});&#xA;&#xA;&#xA;dispatch_sync(dispatch_queue_create(&amp;#34;test_sample&amp;#34;, DISPATCH_QUEUE_SERIAL), ^{&#xA;    // 同期処理&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>遅延処理</title>
      <link>http://localhost:61372/posts/2024-05-16-07-55-58-%E9%81%85%E5%BB%B6%E5%87%A6%E7%90%86/</link>
      <pubDate>Thu, 16 May 2024 07:55:58 +0900</pubDate>
      <guid>http://localhost:61372/posts/2024-05-16-07-55-58-%E9%81%85%E5%BB%B6%E5%87%A6%E7%90%86/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-objective_c&#34; data-lang=&#34;objective_c&#34;&gt;dispatch_after(dispatch_time(DISPATCH_TIME_NOW, 1.0 * NSEC_PER_SEC), dispatch_get_main_queue(), ^{&#xA;    // 処理内容&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-objective_c&#34; data-lang=&#34;objective_c&#34;&gt; - (void)doAfterDelay{&#xA;   // 処理内容&#xA; }&#xA; [self performSelector:@selector(doAfterDelay) withObject:nil afterDelay:1];&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Docker Composeで「project Name Must Not Be Empty」がでた</title>
      <link>http://localhost:61372/posts/2024-04-25-23-37-23-docker-compose%E3%81%A7project-name-must-not-be-empty%E3%81%8C%E3%81%A7%E3%81%9F/</link>
      <pubDate>Thu, 25 Apr 2024 23:37:23 +0900</pubDate>
      <guid>http://localhost:61372/posts/2024-04-25-23-37-23-docker-compose%E3%81%A7project-name-must-not-be-empty%E3%81%8C%E3%81%A7%E3%81%9F/</guid>
      <description>&lt;p&gt;Macでdocker composeファイルを起動したら&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;project name must not be empty&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;とでた。&lt;/p&gt;&#xA;&lt;p&gt;文法も間違えてないのになんだろうと思ったら、&lt;/p&gt;&#xA;&lt;p&gt;ルートのディレクトリが日本語を使用していただけでエラーが出た。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CentOS6でのリポジトリを取得する方法</title>
      <link>http://localhost:61372/posts/2024-04-23-15-35-49-centos6%E3%81%A7%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 23 Apr 2024 15:35:49 +0900</pubDate>
      <guid>http://localhost:61372/posts/2024-04-23-15-35-49-centos6%E3%81%A7%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;p&gt;基本的には、&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://mirrorlist.centos.org/&#34;&gt;http://mirrorlist.centos.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;を&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://archive.kernel.org/&#34;&gt;https://archive.kernel.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;に接続先を変えます、&lt;/p&gt;&#xA;&lt;p&gt;どうするかというと、&lt;/p&gt;&#xA;&lt;p&gt;mirrorlist定数をコメントアウトして、&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;baseurl=https://archive.kernel.org/centos-vault/[OSのバージョン]/xxxx/$basearch/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;に置き換え。xxxは、各自のディレクトリにあわせます。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ハード作成の面白いサイト</title>
      <link>http://localhost:61372/posts/2024-04-21-08-47-15-%E3%83%8F%E3%83%BC%E3%83%89%E4%BD%9C%E6%88%90%E3%81%AE%E9%9D%A2%E7%99%BD%E3%81%84%E3%82%B5%E3%82%A4%E3%83%88/</link>
      <pubDate>Sun, 21 Apr 2024 08:47:15 +0900</pubDate>
      <guid>http://localhost:61372/posts/2024-04-21-08-47-15-%E3%83%8F%E3%83%BC%E3%83%89%E4%BD%9C%E6%88%90%E3%81%AE%E9%9D%A2%E7%99%BD%E3%81%84%E3%82%B5%E3%82%A4%E3%83%88/</guid>
      <description>&lt;p&gt;４歳の息子がよく見ている段ボールで作る何ちゃらがあるんですけど。&#xA;今回ドリンクバーでして、これの装置だけでもあったら楽しいなぁ&#xA;って思いました。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qMYM1qFy8eA&#34;&gt;https://www.youtube.com/watch?v=qMYM1qFy8eA&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>AwscliでEC2の強制再起動</title>
      <link>http://localhost:61372/posts/2024-04-19-22-05-17-awscli%E3%81%A7ec2%E3%81%AE%E5%BC%B7%E5%88%B6%E5%86%8D%E8%B5%B7%E5%8B%95/</link>
      <pubDate>Fri, 19 Apr 2024 22:05:17 +0900</pubDate>
      <guid>http://localhost:61372/posts/2024-04-19-22-05-17-awscli%E3%81%A7ec2%E3%81%AE%E5%BC%B7%E5%88%B6%E5%86%8D%E8%B5%B7%E5%8B%95/</guid>
      <description>&lt;h1 id=&#34;強制停止---起動&#34;&gt;強制停止 -&amp;gt; 起動&lt;/h1&gt;&#xA;&lt;p&gt;最近しょっちゅう、CPUが上がりすぎて再起動しなけりゃならないのが&#xA;頻繁にあったので、こんな感じでASW CLIでコマンドをたたいてます。&#xA;こんなコマンドたたかなくても、ちゃんと動けばいいのだが。。。。&lt;/p&gt;</description>
    </item>
    <item>
      <title>最近更新できてないなぁ。。。。</title>
      <link>http://localhost:61372/posts/2024-04-19-17-43-50-%E6%9C%80%E8%BF%91/</link>
      <pubDate>Fri, 19 Apr 2024 17:43:50 +0900</pubDate>
      <guid>http://localhost:61372/posts/2024-04-19-17-43-50-%E6%9C%80%E8%BF%91/</guid>
      <description>&lt;p&gt;最近全然ブログが更新できていない。（；^ω^）&lt;/p&gt;&#xA;&lt;p&gt;hugo + git hub でブログをかけるようにしたら、便利かと思ったら、 最初にブログを追加するのが面倒、&#xA;gitに上げるのもPCでしかできないから面倒、で全然更新がおろそかになってる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MacでDockerデスクトップをインストールしないで使う方法。(lima)</title>
      <link>http://localhost:61372/posts/mac%E3%81%A7docker%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%AA%E3%81%84%E3%81%A7%E4%BD%BF%E3%81%86%E6%96%B9%E6%B3%95lima/</link>
      <pubDate>Thu, 16 Feb 2023 00:40:43 +0900</pubDate>
      <guid>http://localhost:61372/posts/mac%E3%81%A7docker%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%AA%E3%81%84%E3%81%A7%E4%BD%BF%E3%81%86%E6%96%B9%E6%B3%95lima/</guid>
      <description>&lt;p&gt;Docker Desktopを使用してもいいけど、&#xA;Limaっていうのを使用してDockerを使おうかなと思ったので、めも。&#xA;ただ、limaは、dockerやdocker-compose のコマンドがすべて使えるわけではないので、コマンドライン版のDockerもインストールする。&lt;/p&gt;</description>
    </item>
    <item>
      <title>HUGOでgistなどの埋め込みを実現させる</title>
      <link>http://localhost:61372/posts/hugo%E3%81%A7gist%E3%81%AA%E3%81%A9%E3%81%AE%E5%9F%8B%E3%82%81%E8%BE%BC%E3%81%BF%E3%82%92%E5%AE%9F%E7%8F%BE%E3%81%95%E3%81%9B%E3%82%8B/</link>
      <pubDate>Wed, 15 Feb 2023 09:47:32 +0900</pubDate>
      <guid>http://localhost:61372/posts/hugo%E3%81%A7gist%E3%81%AA%E3%81%A9%E3%81%AE%E5%9F%8B%E3%82%81%E8%BE%BC%E3%81%BF%E3%82%92%E5%AE%9F%E7%8F%BE%E3%81%95%E3%81%9B%E3%82%8B/</guid>
      <description>&lt;p&gt;大分久しぶりの更新&lt;/p&gt;&#xA;&lt;p&gt;ドキュメントの&lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;ここ&lt;/a&gt;に載ってますね。&lt;/p&gt;&#xA;&lt;h3 id=&#34;gist&#34;&gt;gist&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{&amp;lt; gist [[ユーザー名]] [[コード]] &amp;gt;}}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;例&#34;&gt;例&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/tama-jp/cfb018852412af5882428b19003c5ca9&#34;&gt;https://gist.github.com/tama-jp/cfb018852412af5882428b19003c5ca9&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;であれば、&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{&amp;lt; gist tama-jp cfb018852412af5882428b19003c5ca9 &amp;gt;}}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;表示&lt;/p&gt;&#xA;&lt;script src=&#34;https://gist.github.com/tama-jp/cfb018852412af5882428b19003c5ca9.js&#34;&gt;&lt;/script&gt;&#xA;&#xA;&lt;h3 id=&#34;tweet&#34;&gt;Tweet&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{&amp;lt; gist [[ユーザー名]] [[コード]] &amp;gt;}}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;例-1&#34;&gt;例&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/pain_ame/status/1625641271137292288?s=20&amp;amp;t=GHSkw_zCyhNgjm1zBytAiw&#34;&gt;https://twitter.com/pain_ame/status/1625641271137292288?s=20&amp;amp;t=GHSkw_zCyhNgjm1zBytAiw&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;であれば、&lt;/p&gt;</description>
    </item>
    <item>
      <title>CakePHPの規約ワードメーカー</title>
      <link>http://localhost:61372/posts/cakephp%E3%81%AE%E8%A6%8F%E7%B4%84%E3%83%AF%E3%83%BC%E3%83%89%E3%83%A1%E3%83%BC%E3%82%AB%E3%83%BC/</link>
      <pubDate>Thu, 01 Dec 2022 20:39:35 +0900</pubDate>
      <guid>http://localhost:61372/posts/cakephp%E3%81%AE%E8%A6%8F%E7%B4%84%E3%83%AF%E3%83%BC%E3%83%89%E3%83%A1%E3%83%BC%E3%82%AB%E3%83%BC/</guid>
      <description>&lt;p&gt;CakePHP 規約ワードメーカーがサイトなくなったと思ってたら、&#xA;本家がそのままやっとるじゃん。。。。&lt;/p&gt;&#xA;&lt;p&gt;ここ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://inflector.cakephp.org/&#34;&gt;https://inflector.cakephp.org/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>xcodeインストールのxcodebuildの確認でエラーがでたときの対処法</title>
      <link>http://localhost:61372/posts/xcode%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%AExcodebuild%E3%81%AE%E7%A2%BA%E8%AA%8D%E3%81%A7%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/</link>
      <pubDate>Thu, 04 Aug 2022 00:29:09 +0900</pubDate>
      <guid>http://localhost:61372/posts/xcode%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%AExcodebuild%E3%81%AE%E7%A2%BA%E8%AA%8D%E3%81%A7%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%81%9F%E3%81%A8%E3%81%8D%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95/</guid>
      <description>&lt;p&gt;こう言うのがでた場合。。。。。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ xcodebuild -version&#xA;error: tool &amp;#39;xcodebuild&amp;#39; requires Xcode, but active developer directory &amp;#39;/Library/Developer/CommandLineTools&amp;#39; is a command line tools instance&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;これたたいてみたら、、、、、&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo xcode-select -s /Applications/Xcode.app/Contents/Developer&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;なおった。。。。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ xcodebuild -version&#xA;Xcode 13.4.1&#xA;Build version 13F100&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Vite &#43; Svelte &#43; Tailwind CSS &#43; daisyUI &#43; TypeScript の環境設定</title>
      <link>http://localhost:61372/posts/vite-&#43;-svelte-&#43;-tailwind-css-&#43;-daisyui-&#43;-typescript-%E3%81%AE%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Fri, 29 Jul 2022 16:43:35 +0900</pubDate>
      <guid>http://localhost:61372/posts/vite-&#43;-svelte-&#43;-tailwind-css-&#43;-daisyui-&#43;-typescript-%E3%81%AE%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/</guid>
      <description>&lt;p&gt;パパッとコマンドなどだけですが、こんな感じで。。。。。。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npm create vite@latest kodawari -- --template svelte-ts&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd kodawari&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npm i -D tailwindcss&#xA;npm i -D daisyui&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npx tailwindcss init -p&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;./src/app.css に追加&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@tailwind base;&#xA;@tailwind components;&#xA;@tailwind utilities;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;./tailwind.config.cjs を更新&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/** @type {import(&amp;#39;tailwindcss&amp;#39;).Config} */&#xA;module.exports = {&#xA;  content: [],&#xA;  theme: {&#xA;    extend: {},&#xA;  },&#xA;  plugins: [],&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;↓&lt;/p&gt;</description>
    </item>
    <item>
      <title>cuiをMacでアプリ化する為のファイル構成</title>
      <link>http://localhost:61372/posts/cui%E3%82%92mac%E3%81%A7%E3%82%A2%E3%83%97%E3%83%AA%E5%8C%96%E3%81%99%E3%82%8B%E7%82%BA%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%A7%8B%E6%88%90/</link>
      <pubDate>Wed, 27 Jul 2022 14:54:26 +0900</pubDate>
      <guid>http://localhost:61372/posts/cui%E3%82%92mac%E3%81%A7%E3%82%A2%E3%83%97%E3%83%AA%E5%8C%96%E3%81%99%E3%82%8B%E7%82%BA%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%A7%8B%E6%88%90/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://kameya-z.way-nifty.com/blog/&#34;&gt;亀屋BLOG&lt;/a&gt;さんの&lt;a href=&#34;http://kameya-z.way-nifty.com/blog/2021/10/post-1bd017.html&#34;&gt;PC-98えみゅ&lt;/a&gt;でCUI版PC98エミュの紹介がされていたのでコンパイルして見たら、動いた！！&lt;/p&gt;&#xA;&lt;p&gt;それで、これいちいち動かすのにコマンドラインからたたくのも面倒だと思い、アプリ化する方法を調べてたのでまとめておく。&lt;/p&gt;&#xA;&lt;h2 id=&#34;フォルダ構成&#34;&gt;フォルダ構成&lt;/h2&gt;&#xA;&lt;p&gt;フォルダ構成はこんな感じ&lt;/p&gt;</description>
    </item>
    <item>
      <title>zshの初期設定</title>
      <link>http://localhost:61372/posts/zsh%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Wed, 27 Jul 2022 10:47:45 +0900</pubDate>
      <guid>http://localhost:61372/posts/zsh%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/</guid>
      <description>&lt;p&gt;ちょっとしたashの設定です。&lt;/p&gt;&#xA;&lt;h2 id=&#34;homebrewからインストール&#34;&gt;Homebrewからインストール&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install zsh&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;シェル一覧リストを追加&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo sh -c &amp;#34;echo &amp;#39;/usr/local/bin/zsh&amp;#39; &amp;gt;&amp;gt; /etc/shells&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;インストールしたzshに設定&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;chsh -s /usr/local/bin/zsh&#xA;Changing shell for ruedap.&#xA;Password for ruedap: パスワードを入力する&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;zsh-completionsのインストール&#34;&gt;zsh-completionsのインストール&lt;/h2&gt;&#xA;&lt;p&gt;補完機能の強化&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgreSQLの自動採番をなおす</title>
      <link>http://localhost:61372/posts/postgresql%E3%81%AE%E8%87%AA%E5%8B%95%E6%8E%A1%E7%95%AA%E3%82%92%E3%81%AA%E3%81%8A%E3%81%99/</link>
      <pubDate>Fri, 22 Jul 2022 19:01:53 +0900</pubDate>
      <guid>http://localhost:61372/posts/postgresql%E3%81%AE%E8%87%AA%E5%8B%95%E6%8E%A1%E7%95%AA%E3%82%92%E3%81%AA%E3%81%8A%E3%81%99/</guid>
      <description>&lt;h2 id=&#34;シーケンスオブジェクトの値の更新&#34;&gt;シーケンスオブジェクトの値の更新&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-postgresql&#34; data-lang=&#34;postgresql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; MAX(id) &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;table&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; nextval(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;table_id_seq&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; setval(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;table_id_seq&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; MAX(id) &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;table&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Nodebrewのインストールと使い方</title>
      <link>http://localhost:61372/posts/nodebrew%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%A8%E4%BD%BF%E3%81%84%E6%96%B9/</link>
      <pubDate>Fri, 22 Jul 2022 11:14:09 +0900</pubDate>
      <guid>http://localhost:61372/posts/nodebrew%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%A8%E4%BD%BF%E3%81%84%E6%96%B9/</guid>
      <description>&lt;h2 id=&#34;nodebrewをインストールする&#34;&gt;Nodebrewをインストールする&lt;/h2&gt;&#xA;&lt;p&gt;インストール&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install nodebrew&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;確認&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;nodebrew -v&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;バージョンが表示されればOK。&lt;/p&gt;&#xA;&lt;p&gt;.zshrcなどに環境変数を追加&#xA;vi ~/.zshrc&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export PATH=$HOME/.nodebrew/current/bin:$PATH&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;初期化&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;nodebrew setup&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;バージョン指定してnodeをインストールする&#xA;インストール可能なバージョンを確認&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wails v2の初期設定</title>
      <link>http://localhost:61372/posts/wails-v2%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Thu, 21 Jul 2022 22:43:00 +0900</pubDate>
      <guid>http://localhost:61372/posts/wails-v2%E3%81%AE%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A/</guid>
      <description>&lt;h2 id=&#34;wailsインストール&#34;&gt;wailsインストール&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;go install github.com/wailsapp/wails/v2/cmd/wails@latest&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;ツールのcheck&#34;&gt;ツールのcheck&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wails doctor &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;初期設定&#34;&gt;初期設定&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wails init -n &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;プロジェクトディレクトリ名&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -t &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;テンプレート名または、url&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wails init -n tamatan -t svelte-ts &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;現在バグなのか、フロントエンドの初期化がうまく行かないので&#xA;yarnまたは、npm installを実行する。&#xA;(yarnの方がうまく行くような気がする。)&lt;/p&gt;</description>
    </item>
    <item>
      <title>iOS(obj-c)の画面遷移</title>
      <link>http://localhost:61372/posts/iosobj-c%E3%81%AE%E7%94%BB%E9%9D%A2%E9%81%B7%E7%A7%BB/</link>
      <pubDate>Thu, 21 Jul 2022 22:16:58 +0900</pubDate>
      <guid>http://localhost:61372/posts/iosobj-c%E3%81%AE%E7%94%BB%E9%9D%A2%E9%81%B7%E7%A7%BB/</guid>
      <description>&lt;p&gt;・コードでの遷移&#xA;・StoryBoardのsegueを使った遷移&#xA;・NavigationControllerを使った遷移&lt;/p&gt;&#xA;&lt;h2 id=&#34;present&#34;&gt;Present&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[self presentViewController:移動先ViewController animated:YES completion:nil];&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;segue&#34;&gt;segue&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[self performSegueWithIdentifier:@&amp;#34;セグエのID&amp;#34; sender:self];&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;push&#34;&gt;Push&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[self.navigationController pushViewController:移動先ViewController animated:YES];&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;pop&#34;&gt;Pop&lt;/h2&gt;&#xA;&lt;h3 id=&#34;指定ビューコントローラーへ&#34;&gt;指定ビューコントローラーへ&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[self.navigationController popToViewController:viewController animated:YES];&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;前の画面に戻る&#34;&gt;前の画面に戻る&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[self.navigationController popViewControllerAnimated:YES];&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;navigationcontrollerの１番目の画面に戻る&#34;&gt;NavigationControllerの１番目の画面に戻る&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[self.navigationController popToRootViewControllerAnimated:YES];&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;storyboard&#34;&gt;StoryBoard&lt;/h2&gt;&#xA;&lt;h4 id=&#34;storyboard-id&#34;&gt;・StoryBoard ID&lt;/h4&gt;&#xA;&lt;p&gt;※storyboardファイルで &amp;lsquo;identify → StoryBoard ID&amp;rsquo;の入力が必要&lt;/p&gt;</description>
    </item>
    <item>
      <title>iOS(obj-c)のセグエの戻り(push)</title>
      <link>http://localhost:61372/posts/iosobj-c%E3%81%AE%E3%82%BB%E3%82%B0%E3%82%A8%E3%81%AE%E6%88%BB%E3%82%8Apush/</link>
      <pubDate>Thu, 21 Jul 2022 22:14:45 +0900</pubDate>
      <guid>http://localhost:61372/posts/iosobj-c%E3%81%AE%E3%82%BB%E3%82%B0%E3%82%A8%E3%81%AE%E6%88%BB%E3%82%8Apush/</guid>
      <description>&lt;h2 id=&#34;１つ前の画面に戻る&#34;&gt;１つ前の画面に戻る&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[self.navigationController popViewControllerAnimated:YES];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ルート画面まで一気に戻る&#34;&gt;ルート画面まで一気に戻る&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[self.navigationController popToRootViewControllerAnimated:YES];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;任意の画面uiviewcontrollerまで戻る&#34;&gt;任意の画面（UIViewController）まで戻る&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[self.navigationController popToViewController:UIViewController animated:YES];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>iOS(obj-c)で文字列結合</title>
      <link>http://localhost:61372/posts/iosobj-c%E3%81%A7%E6%96%87%E5%AD%97%E5%88%97%E7%B5%90%E5%90%88/</link>
      <pubDate>Thu, 21 Jul 2022 22:12:09 +0900</pubDate>
      <guid>http://localhost:61372/posts/iosobj-c%E3%81%A7%E6%96%87%E5%AD%97%E5%88%97%E7%B5%90%E5%90%88/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-ca&#34; data-lang=&#34;ca&#34;&gt;    NSString *urlString =[NSString stringWithFormat:@&amp;#34;%@/test.php&amp;#34;,dns];&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>iOS(obj-c)でgetとPOST</title>
      <link>http://localhost:61372/posts/iosobj-c%E3%81%A7get%E3%81%A8post/</link>
      <pubDate>Thu, 21 Jul 2022 22:09:00 +0900</pubDate>
      <guid>http://localhost:61372/posts/iosobj-c%E3%81%A7get%E3%81%A8post/</guid>
      <description>&lt;h2 id=&#34;get&#34;&gt;GET&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NSString &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;urlString &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NSString stringWithFormat:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://xxxxx.co.jp/test?key1=%@&amp;#34;&lt;/span&gt;,key1];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;DLog&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urlString:%@&amp;#34;&lt;/span&gt;, urlString)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NSURLSession &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;urlSession;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NSURLSessionConfiguration &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sessionConfig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NSURLSessionConfiguration defaultSessionConfiguration];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sessionConfig.timeoutIntervalForRequest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sessionConfig.timeoutIntervalForResource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 処理を単純化させるためにdelegateは使用しませんでした。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// UI関連の処理を想定していないため、delegateQueueは独自に作成しました。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    urlSession &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NSURLSession sessionWithConfiguration:sessionConfig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                               delegate:nil&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          delegateQueue:nil];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;NSLog&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;get start&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NSMutableURLRequest &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;request &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NSMutableURLRequest new];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setURL:[NSURL URLWithString:urlString]];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setCachePolicy:NSURLRequestReloadIgnoringLocalCacheData];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setValue:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;YKTHttpClient&amp;#34;&lt;/span&gt; forHTTPHeaderField:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setHTTPMethod:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 取得するデータサイズが小さいのでtaskはNSURLSessionDataTaskを使用&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    NSURLSessionDataTask &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;dataTask&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [urlSession dataTaskWithRequest:request&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            completionHandler:&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;(NSData &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;data, NSURLResponse &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;response, NSError &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;error) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                NSHTTPURLResponse &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;httpUrlResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (NSHTTPURLResponse &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;) response;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#a6e22e&#34;&gt;DLog&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Status code: %ld&amp;#34;&lt;/span&gt;, httpUrlResponse.statusCode);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                CFStringEncoding encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CFStringConvertIANACharSetNameToEncoding&lt;/span&gt;((CFStringRef) [response textEncodingName]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                NSString &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[NSString alloc] initWithData:data encoding:&lt;span style=&#34;color:#a6e22e&#34;&gt;CFStringConvertEncodingToNSStringEncoding&lt;/span&gt;(encoding)];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                NSData &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;restoreData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[NSData alloc] initWithBase64EncodedString:body options:&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                NSString &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;restoreString &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[NSString alloc] initWithData:restoreData encoding:NSUTF8StringEncoding];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#a6e22e&#34;&gt;dispatch_async&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                        &lt;span style=&#34;color:#a6e22e&#34;&gt;dispatch_get_main_queue&lt;/span&gt;(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                        &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                            self.textView.text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; restoreString;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            }];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [dataTask resume];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;post&#34;&gt;POST&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NSString &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;urlString &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://xxxx.co.jp/test&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NSDictionary &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;params &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; name,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uuid&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; uuid,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;DLog&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urlString:%@&amp;#34;&lt;/span&gt;, urlString)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 連想配列として与えられたパラメータをクエリ文字列に変換する&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    NSData &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;query &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [self buildQueryWithDictionary: params];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NSURLSession &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;urlSession;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NSURLSessionConfiguration &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sessionConfig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NSURLSessionConfiguration defaultSessionConfiguration];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sessionConfig.timeoutIntervalForRequest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sessionConfig.timeoutIntervalForResource &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 処理を単純化させるためにdelegateは使用しませんでした。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// UI関連の処理を想定していないため、delegateQueueは独自に作成しました。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    urlSession &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NSURLSession sessionWithConfiguration:sessionConfig&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                               delegate:nil&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          delegateQueue:nil];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;NSLog&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;get start&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NSMutableURLRequest &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;request &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NSMutableURLRequest new];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setURL:[NSURL URLWithString:urlString]];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setCachePolicy:NSURLRequestUseProtocolCachePolicy];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setValue:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;iOS&amp;#34;&lt;/span&gt; forHTTPHeaderField:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User-Agent&amp;#34;&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setHTTPMethod:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setValue: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;application/x-www-form-urlencoded&amp;#34;&lt;/span&gt;  forHTTPHeaderField: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setValue: [NSString stringWithFormat: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%lu&amp;#34;&lt;/span&gt;, (&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt;)[query length]]  forHTTPHeaderField: &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Content-Length&amp;#34;&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [request setHTTPBody: query];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 取得するデータサイズが小さいのでtaskはNSURLSessionDataTaskを使用&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    NSURLSessionDataTask &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;dataTask&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [urlSession dataTaskWithRequest:request&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            completionHandler:&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;(NSData &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;data, NSURLResponse &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;response, NSError &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;error) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                NSHTTPURLResponse &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;httpUrlResponse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (NSHTTPURLResponse &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;) response;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#a6e22e&#34;&gt;DLog&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Status code: %ld&amp;#34;&lt;/span&gt;, httpUrlResponse.statusCode);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                CFStringEncoding encoding &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CFStringConvertIANACharSetNameToEncoding&lt;/span&gt;((CFStringRef) [response textEncodingName]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                NSString &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[NSString alloc] initWithData:data encoding:&lt;span style=&#34;color:#a6e22e&#34;&gt;CFStringConvertEncodingToNSStringEncoding&lt;/span&gt;(encoding)];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                NSData &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;restoreData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[NSData alloc] initWithBase64EncodedString:body options:&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                NSString &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;restoreString &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[NSString alloc] initWithData:restoreData encoding:NSUTF8StringEncoding];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                &lt;span style=&#34;color:#a6e22e&#34;&gt;dispatch_async&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                        &lt;span style=&#34;color:#a6e22e&#34;&gt;dispatch_get_main_queue&lt;/span&gt;(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                        &lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            }];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [dataTask resume];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>AndroidでgetとPOST</title>
      <link>http://localhost:61372/posts/android%E3%81%A7get%E3%81%A8post/</link>
      <pubDate>Thu, 21 Jul 2022 22:04:39 +0900</pubDate>
      <guid>http://localhost:61372/posts/android%E3%81%A7get%E3%81%A8post/</guid>
      <description>&lt;p&gt;こんな感じ&lt;/p&gt;&#xA;&lt;h2 id=&#34;get&#34;&gt;GET&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-aidl&#34; data-lang=&#34;aidl&#34;&gt; public String getHistoryData(String key1) {&#xA;        HttpURLConnection urlConnection = null;&#xA;        InputStream inputStream = null;&#xA;        String result = &amp;#34;&amp;#34;;&#xA;        String str = &amp;#34;&amp;#34;;&#xA;        try {&#xA;            URL url = new URL(&amp;#34;https://xxxxx.co.jp/test?key1=&amp;#34; + key1);&#xA;            // 接続先URLへのコネクションを開く．まだ接続されていない&#xA;            urlConnection = (HttpURLConnection) url.openConnection();&#xA;            // 接続タイムアウトを設定&#xA;            urlConnection.setConnectTimeout(10000);&#xA;            // レスポンスデータの読み取りタイムアウトを設定&#xA;            urlConnection.setReadTimeout(10000);&#xA;            // ヘッダーにUser-Agentを設定&#xA;            urlConnection.addRequestProperty(&amp;#34;User-Agent&amp;#34;, &amp;#34;Android&amp;#34;);&#xA;            // ヘッダーにAccept-Languageを設定&#xA;            urlConnection.addRequestProperty(&amp;#34;Accept-Language&amp;#34;, Locale.getDefault().toString());&#xA;            // HTTPメソッドを指定&#xA;            urlConnection.setRequestMethod(&amp;#34;GET&amp;#34;);&#xA;            //リクエストボディの送信を許可しない&#xA;            urlConnection.setDoOutput(false);&#xA;            //レスポンスボディの受信を許可する&#xA;            urlConnection.setDoInput(true);&#xA;            // 通信開始&#xA;            urlConnection.connect();&#xA;            // レスポンスコードを取得&#xA;            int statusCode = urlConnection.getResponseCode();&#xA;            // レスポンスコード200は通信に成功したことを表す&#xA;            if (statusCode == 200) {&#xA;                inputStream = urlConnection.getInputStream();&#xA;                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, &amp;#34;utf-8&amp;#34;));&#xA;                // 1行ずつレスポンス結果を取得しstrに追記&#xA;                result = bufferedReader.readLine();&#xA;                while (result != null) {&#xA;                    str += result;&#xA;                    result = bufferedReader.readLine();&#xA;                }&#xA;                bufferedReader.close();&#xA;            }&#xA;        } catch (MalformedURLException e) {&#xA;            e.printStackTrace();&#xA;        } catch (IOException e) {&#xA;            e.printStackTrace();&#xA;        }&#xA;        // レスポンス結果のJSONをString型で返す&#xA;        return str;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;post&#34;&gt;POST&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-aidl&#34; data-lang=&#34;aidl&#34;&gt;public String PostUserName(String key1, String key2) {&#xA;        HttpURLConnection urlConnection = null;&#xA;        InputStream inputStream = null;&#xA;        String result = &amp;#34;&amp;#34;;&#xA;        String str = &amp;#34;&amp;#34;;&#xA;&#xA;        try {&#xA;            URL url = new URL(&amp;#34;http://hpph;e.cp.jp&amp;#34;&amp;#34;);&#xA;            // 接続先URLへのコネクションを開く．まだ接続されていない&#xA;            urlConnection = (HttpURLConnection) url.openConnection();&#xA;            // 接続タイムアウトを設定&#xA;            urlConnection.setConnectTimeout(10000);&#xA;            // レスポンスデータの読み取りタイムアウトを設定&#xA;            urlConnection.setReadTimeout(10000);&#xA;            // ヘッダーにUser-Agentを設定&#xA;            urlConnection.addRequestProperty(&amp;#34;User-Agent&amp;#34;, &amp;#34;Android&amp;#34;);&#xA;            // ヘッダーにAccept-Languageを設定&#xA;            urlConnection.addRequestProperty(&amp;#34;Accept-Language&amp;#34;, Locale.getDefault().toString());&#xA;            //ヘッダーにContent-Typeを設定する&#xA;            urlConnection.addRequestProperty(&amp;#34;Content-Type&amp;#34;, &amp;#34;application/x-www-form-urlencoded&amp;#34;);&#xA;            // HTTPメソッドを指定&#xA;            urlConnection.setRequestMethod(&amp;#34;POST&amp;#34;);&#xA;&#xA;            urlConnection.setUseCaches(false);&#xA;            //リクエストボディの送信を許可しない&#xA;            urlConnection.setDoOutput(true);&#xA;            //レスポンスボディの受信を許可する&#xA;            urlConnection.setDoInput(true);&#xA;            // 通信開始&#xA;            urlConnection.connect();&#xA;&#xA;&#xA;            //ステップ5:リクエストボディの書き出しを行う。&#xA;            OutputStream outputStream = urlConnection.getOutputStream();&#xA;            Map&amp;lt;String, String&amp;gt; keyValues = new HashMap&amp;lt;&amp;gt;();&#xA;&#xA;            keyValues.put(&amp;#34;key1&amp;#34;, key1);&#xA;            keyValues.put(&amp;#34;key2&amp;#34;, key2);&#xA;&#xA;&#xA;            if (keyValues.size() &amp;gt; 0) {&#xA;                Uri.Builder builder = new Uri.Builder();&#xA;                //HashMapを[key=value]形式の文字列に変換する&#xA;                for (String key : keyValues.keySet()) {&#xA;                    //[key=value]形式の文字列に変換する。&#xA;                    builder.appendQueryParameter(key, keyValues.get(key));&#xA;                }&#xA;                //[key=value&amp;amp;key=value…]形式の文字列に変換する。&#xA;                String join = builder.build().getEncodedQuery();&#xA;                PrintStream ps = new PrintStream(outputStream);&#xA;                ps.print(join);&#xA;                ps.close();&#xA;            }&#xA;            outputStream.close();&#xA;&#xA;            // レスポンスコードを取得&#xA;            int statusCode = urlConnection.getResponseCode();&#xA;            // レスポンスコード200は通信に成功したことを表す&#xA;            if (statusCode == 200) {&#xA;                inputStream = urlConnection.getInputStream();&#xA;                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, StandardCharsets.UTF_8));&#xA;                // 1行ずつレスポンス結果を取得しstrに追記&#xA;                result = bufferedReader.readLine();&#xA;                while (result != null) {&#xA;                    str += result;&#xA;                    result = bufferedReader.readLine();&#xA;                }&#xA;                bufferedReader.close();&#xA;            }&#xA;        } catch (MalformedURLException e) {&#xA;            e.printStackTrace();&#xA;        } catch (IOException e) {&#xA;            e.printStackTrace();&#xA;        }&#xA;        // レスポンス結果のJSONをString型で返す&#xA;        return str;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Wails v2のテンプレート</title>
      <link>http://localhost:61372/posts/wails-v2%E3%81%AE%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88/</link>
      <pubDate>Thu, 21 Jul 2022 22:00:39 +0900</pubDate>
      <guid>http://localhost:61372/posts/wails-v2%E3%81%AE%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88/</guid>
      <description>&lt;p&gt;テンプレートの一覧どこにあるんやと思ったら&lt;/p&gt;&#xA;&lt;p&gt;ここにあった（；^ω^）&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wails.io/docs/community/templates/&#34;&gt;https://wails.io/docs/community/templates/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>PC-8801のエミュレータ、「quasi88」のSDL2対応版</title>
      <link>http://localhost:61372/posts/pc-8801%E3%81%AE%E3%82%A8%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BFquasi88%E3%81%AEsdl2%E5%AF%BE%E5%BF%9C%E7%89%88/</link>
      <pubDate>Tue, 12 Jul 2022 17:12:30 +0900</pubDate>
      <guid>http://localhost:61372/posts/pc-8801%E3%81%AE%E3%82%A8%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BFquasi88%E3%81%AEsdl2%E5%AF%BE%E5%BF%9C%E7%89%88/</guid>
      <description>&lt;p&gt;Mac用PC88のエミュレータが欲しいと思ってたら、&#xA;こんなところに！！&lt;/p&gt;&#xA;&lt;p&gt;HomeBrewのインストーラーだと、SDL1なのでワーニングがでるけど、&#xA;SDL2対応だから、これならでない！！&lt;/p&gt;</description>
    </item>
    <item>
      <title>pemファイルに含まれる証明書の確認方法</title>
      <link>http://localhost:61372/posts/pem%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%90%AB%E3%81%BE%E3%82%8C%E3%82%8B%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AE%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 12 Jul 2022 14:07:34 +0900</pubDate>
      <guid>http://localhost:61372/posts/pem%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%90%AB%E3%81%BE%E3%82%8C%E3%82%8B%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AE%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;p&gt;以下で、内容が見られます。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl x509 -text -fingerprint -noout -in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ファイル名.pem&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;実際には、こんな感じです。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ openssl x509 -text -fingerprint -noout -in  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*.xxxxxxxx.xxx.cer&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Certificate:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Data:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Version: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Serial Number:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            26:8c:4f:db:b0:ba:d7:43:45:1b:43:f2:5d:84:9b:85&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Signature Algorithm: sha384WithRSAEncryption&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Issuer: C &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AT, O &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ZeroSSL, CN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ZeroSSL RSA Domain Secure Site CA&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Validity&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Not Before: May  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; 00:00:00 &lt;span style=&#34;color:#ae81ff&#34;&gt;2022&lt;/span&gt; GMT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Not After : Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 23:59:59 &lt;span style=&#34;color:#ae81ff&#34;&gt;2022&lt;/span&gt; GMT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Subject: CN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; *.tama-tan.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Subject Public Key Info:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Public Key Algorithm: rsaEncryption&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                RSA Public-Key: &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt; bit&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                Modulus:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    00:c5:bb:31:b4:41:96:66:e6:ed:47:9e:74:2f:58:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    7a:af:fe:a0:d8:09:06:25:36:99:4f:69:79:71:55:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    --- 省略 ----&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上記で、Validityの覧を見ると有効期限がわかります。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golangでホットリロードする方法</title>
      <link>http://localhost:61372/posts/golang%E3%81%A7%E3%83%9B%E3%83%83%E3%83%88%E3%83%AA%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 05 Jul 2022 13:00:04 +0900</pubDate>
      <guid>http://localhost:61372/posts/golang%E3%81%A7%E3%83%9B%E3%83%83%E3%83%88%E3%83%AA%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;p&gt;※ 過去に書いた記事を載せています。今動作するかは不明。。。。&lt;/p&gt;&#xA;&lt;p&gt;今回、Go言語で開発を行うことがありました。&lt;/p&gt;&#xA;&lt;p&gt;go言語は、PHPやRubyなどの言語とは異なり、ビルドをしないとソースは反映されません。&lt;/p&gt;</description>
    </item>
    <item>
      <title>iOSとAndroidの共通モジュールをgomobileで作ってみる</title>
      <link>http://localhost:61372/posts/ios%E3%81%A8android%E3%81%AE%E5%85%B1%E9%80%9A%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%92gomobile%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</link>
      <pubDate>Tue, 05 Jul 2022 12:23:52 +0900</pubDate>
      <guid>http://localhost:61372/posts/ios%E3%81%A8android%E3%81%AE%E5%85%B1%E9%80%9A%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%92gomobile%E3%81%A7%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</guid>
      <description>&lt;p&gt;まだうごかない&lt;/p&gt;&#xA;&lt;p&gt;※ 過去に書いた記事を載せています。今動作するかは不明。。。。&lt;/p&gt;&#xA;&lt;p&gt;今回は、「 iOSとAndroidの共通モジュールをgomobileで作ってみる」をかーんたんに紹介します(^O^)&lt;/p&gt;</description>
    </item>
    <item>
      <title>APIの死活監視をRocketChatに送信する</title>
      <link>http://localhost:61372/posts/api%E3%81%AE%E6%AD%BB%E6%B4%BB%E7%9B%A3%E8%A6%96%E3%82%92rocketchat%E3%81%AB%E9%80%81%E4%BF%A1%E3%81%99%E3%82%8B/</link>
      <pubDate>Tue, 05 Jul 2022 12:15:06 +0900</pubDate>
      <guid>http://localhost:61372/posts/api%E3%81%AE%E6%AD%BB%E6%B4%BB%E7%9B%A3%E8%A6%96%E3%82%92rocketchat%E3%81%AB%E9%80%81%E4%BF%A1%E3%81%99%E3%82%8B/</guid>
      <description>&lt;p&gt;※ 過去に書いた記事を載せています。今動作するかは不明。。。。&lt;/p&gt;&#xA;&lt;p&gt;サーバ監視ツールを作成しようというお話をします。&lt;/p&gt;&#xA;&lt;p&gt;サーバが本当に動いているかどうかを少し前までは、メールで送信が多かったのですが、&#xA;最近は、Slack等のチャットに連絡するような方法が多くなってきているようです。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
