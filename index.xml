<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Ko-Da-Wa-Ri</title><link>https://kodawari.info/</link><description>Recent content on Ko-Da-Wa-Ri</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 12 Jul 2022 17:12:30 +0900</lastBuildDate><atom:link href="https://kodawari.info/index.xml" rel="self" type="application/rss+xml"/><item><title>PC-8801のエミュレータ、「quasi88」のSDL2対応版</title><link>https://kodawari.info/posts/pc-8801%E3%81%AE%E3%82%A8%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BFquasi88%E3%81%AEsdl2%E5%AF%BE%E5%BF%9C%E7%89%88/</link><pubDate>Tue, 12 Jul 2022 17:12:30 +0900</pubDate><guid>https://kodawari.info/posts/pc-8801%E3%81%AE%E3%82%A8%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BFquasi88%E3%81%AEsdl2%E5%AF%BE%E5%BF%9C%E7%89%88/</guid><description>Mac用PC88のエミュレータが欲しいと思ってたら、 こんなところに！！ HomeBrewのインストーラーだと、SDL1なのでワーニングがでるけ</description><content:encoded><![CDATA[
              <p>Mac用PC88のエミュレータが欲しいと思ってたら、
こんなところに！！</p>
<p>HomeBrewのインストーラーだと、SDL1なのでワーニングがでるけど、
SDL2対応だから、これならでない！！</p>
<p><a href="http://kameya-z.way-nifty.com/blog/2021/08/post-bf1e89.html">http://kameya-z.way-nifty.com/blog/2021/08/post-bf1e89.html</a></p>
<p><img src="../img/icon20220712.png" alt="icon20220712">
コンパイルしたら出てきた。</p>
<p><img src="../img/JESUS-pic1.png" alt="icon20220712">
JESUSを動かしてみたらこんな感じ♪</p>

              ]]></content:encoded></item><item><title>pemファイルに含まれる証明書の確認方法</title><link>https://kodawari.info/posts/pem%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%90%AB%E3%81%BE%E3%82%8C%E3%82%8B%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AE%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95/</link><pubDate>Tue, 12 Jul 2022 14:07:34 +0900</pubDate><guid>https://kodawari.info/posts/pem%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E5%90%AB%E3%81%BE%E3%82%8C%E3%82%8B%E8%A8%BC%E6%98%8E%E6%9B%B8%E3%81%AE%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95/</guid><description>以下で、内容が見られます。 openssl x509 -text -fingerprint -noout -in &amp;#34;ファイル名.pem&amp;#34; 実際には、こんな感じです。 $ openssl x509 -text -fingerprint -noout -in &amp;#39;*.xxxxxxxx.xxx.cer&amp;#39; Certificate: Data: Version: 3 (0x2) Serial Number: 26:8c:4f:db:b0:ba:d7:43:45:1b:43:f2:5d:84:9b:85 Signature Algorithm: sha384WithRSAEncryption</description><content:encoded><![CDATA[
              <p>以下で、内容が見られます。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>openssl x509 -text -fingerprint -noout -in <span style="color:#e6db74">&#34;ファイル名.pem&#34;</span>
</span></span></code></pre></div><p>実際には、こんな感じです。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ openssl x509 -text -fingerprint -noout -in  <span style="color:#e6db74">&#39;*.xxxxxxxx.xxx.cer&#39;</span>
</span></span><span style="display:flex;"><span>Certificate:
</span></span><span style="display:flex;"><span>    Data:
</span></span><span style="display:flex;"><span>        Version: <span style="color:#ae81ff">3</span> <span style="color:#f92672">(</span>0x2<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>        Serial Number:
</span></span><span style="display:flex;"><span>            26:8c:4f:db:b0:ba:d7:43:45:1b:43:f2:5d:84:9b:85
</span></span><span style="display:flex;"><span>        Signature Algorithm: sha384WithRSAEncryption
</span></span><span style="display:flex;"><span>        Issuer: C <span style="color:#f92672">=</span> AT, O <span style="color:#f92672">=</span> ZeroSSL, CN <span style="color:#f92672">=</span> ZeroSSL RSA Domain Secure Site CA
</span></span><span style="display:flex;"><span>        Validity
</span></span><span style="display:flex;"><span>            Not Before: May  <span style="color:#ae81ff">5</span> 00:00:00 <span style="color:#ae81ff">2022</span> GMT
</span></span><span style="display:flex;"><span>            Not After : Aug  <span style="color:#ae81ff">3</span> 23:59:59 <span style="color:#ae81ff">2022</span> GMT
</span></span><span style="display:flex;"><span>        Subject: CN <span style="color:#f92672">=</span> *.tama-tan.com
</span></span><span style="display:flex;"><span>        Subject Public Key Info:
</span></span><span style="display:flex;"><span>            Public Key Algorithm: rsaEncryption
</span></span><span style="display:flex;"><span>                RSA Public-Key: <span style="color:#f92672">(</span><span style="color:#ae81ff">2048</span> bit<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>                Modulus:
</span></span><span style="display:flex;"><span>                    00:c5:bb:31:b4:41:96:66:e6:ed:47:9e:74:2f:58:
</span></span><span style="display:flex;"><span>                    7a:af:fe:a0:d8:09:06:25:36:99:4f:69:79:71:55:
</span></span><span style="display:flex;"><span>                    --- 省略 ----
</span></span></code></pre></div><p>上記で、Validityの覧を見ると有効期限がわかります。</p>

              ]]></content:encoded></item><item><title>Macの設定（超適当）</title><link>https://kodawari.info/posts/mac%E3%81%AE%E8%A8%AD%E5%AE%9A%E8%B6%85%E9%81%A9%E5%BD%93/</link><pubDate>Mon, 04 Jul 2022 17:28:43 +0900</pubDate><guid>https://kodawari.info/posts/mac%E3%81%AE%E8%A8%AD%E5%AE%9A%E8%B6%85%E9%81%A9%E5%BD%93/</guid><description>雑な書き方だけどMacのインストールのファイルなどを公開 Homebrewのインストール 以下のファイルの内容() Brewfile tap &amp;#34;homebrew/bundle&amp;#34; tap &amp;#34;homebrew/cask&amp;#34; tap &amp;#34;homebrew/cask-fonts&amp;#34; tap &amp;#34;homebrew/core&amp;#34; brew &amp;#34;cloc&amp;#34; brew &amp;#34;colordiff&amp;#34; brew &amp;#34;coreutils&amp;#34;</description><content:encoded><![CDATA[
              <p>雑な書き方だけどMacのインストールのファイルなどを公開</p>
<h2 id="homebrewのインストール">Homebrewのインストール</h2>
<p>以下のファイルの内容()</p>
<p>Brewfile</p>
<pre tabindex="0"><code>tap &#34;homebrew/bundle&#34;
tap &#34;homebrew/cask&#34;
tap &#34;homebrew/cask-fonts&#34;
tap &#34;homebrew/core&#34;
brew &#34;cloc&#34;
brew &#34;colordiff&#34;
brew &#34;coreutils&#34;
brew &#34;curl&#34;
brew &#34;ffmpeg&#34;
brew &#34;gnu-sed&#34;
brew &#34;go&#34;
brew &#34;graphviz&#34;
brew &#34;htop&#34;
brew &#34;hugo&#34;
brew &#34;jq&#34;
brew &#34;mas&#34;
brew &#34;nkf&#34;
brew &#34;nodebrew&#34;
brew &#34;pandoc&#34;
brew &#34;plantuml&#34;
brew &#34;starship&#34;
brew &#34;tree&#34;
brew &#34;wget&#34;
brew &#34;yarn&#34;
brew &#34;yt-dlp&#34;
brew &#34;zsh-autosuggestions&#34;
brew &#34;zsh-completions&#34;
brew &#34;zsh-syntax-highlighting&#34;
cask &#34;adobe-acrobat-reader&#34;
cask &#34;alfred&#34;
cask &#34;apparency&#34;
cask &#34;astah-professional&#34;
cask &#34;atok&#34;
cask &#34;bbedit&#34;
cask &#34;bettertouchtool&#34;
cask &#34;beyond-compare&#34;
cask &#34;bootstrap-studio&#34;
cask &#34;brave-browser&#34;
cask &#34;brooklyn&#34;
cask &#34;browserosaurus&#34;
cask &#34;calibre&#34;
cask &#34;coderunner&#34;
cask &#34;dash&#34;
cask &#34;docker&#34;
cask &#34;drawio&#34;
cask &#34;firefox&#34;
cask &#34;font-ricty-diminished&#34;
cask &#34;google-chrome&#34;
cask &#34;gyazmail&#34;
cask &#34;istat-menus&#34;
cask &#34;iterm2&#34;
cask &#34;jedit-omega&#34;
cask &#34;jetbrains-toolbox&#34;
cask &#34;joplin&#34;
cask &#34;kaleidoscope&#34;
cask &#34;mamp&#34;
cask &#34;openinterminal&#34;
cask &#34;path-finder&#34;
cask &#34;paw&#34;
cask &#34;qlcolorcode&#34;
cask &#34;qlimagesize&#34;
cask &#34;qlmarkdown&#34;
cask &#34;qlprettypatch&#34;
cask &#34;qlstephen&#34;
cask &#34;qlvideo&#34;
cask &#34;quicklook-csv&#34;
cask &#34;quicklook-json&#34;
cask &#34;quicklookapk&#34;
cask &#34;quicklookase&#34;
cask &#34;smartgit&#34;
cask &#34;stoplight-studio&#34;
cask &#34;sublime-text&#34;
cask &#34;suspicious-package&#34;
cask &#34;syntax-highlight&#34;
cask &#34;transmit&#34;
cask &#34;typora&#34;
cask &#34;vivaldi&#34;
cask &#34;webpquicklook&#34;
cask &#34;zoc&#34;
mas &#34;Affinity Designer&#34;, id: 824171161
mas &#34;Display Menu&#34;, id: 549083868
mas &#34;Graphic&#34;, id: 404705039
mas &#34;GraphicConverter 11&#34;, id: 1465576485
mas &#34;Hidden Bar&#34;, id: 1452453066
mas &#34;Keka&#34;, id: 470158793
mas &#34;LINE&#34;, id: 539883307
mas &#34;Microsoft Excel&#34;, id: 462058435
mas &#34;Microsoft PowerPoint&#34;, id: 462062816
mas &#34;OmniPlan&#34;, id: 1460319993
mas &#34;Peek&#34;, id: 1554235898
mas &#34;Pixelmator Pro&#34;, id: 1289583905
mas &#34;Power JSON Editor&#34;, id: 499768540
mas &#34;QREncoderPro&#34;, id: 479397466
mas &#34;RunCat&#34;, id: 1429033973
mas &#34;SimpleMind Pro&#34;, id: 434808346
mas &#34;Xcode&#34;, id: 497799835
mas &#34;デスクトップ時計 +&#34;, id: 892038932
</code></pre><h2 id="zshrc">zshrc</h2>
<p>~/.zshrc</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 基本的な環境変数</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>export LANG<span style="color:#f92672">=</span>ja_JP.UTF-8
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>export EDITOR<span style="color:#f92672">=</span>vim
</span></span><span style="display:flex;"><span>export PAGER<span style="color:#f92672">=</span>lv
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Python venv</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> -e venv/bin/activate <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># 存在する場合</span>
</span></span><span style="display:flex;"><span>    source venv/bin/activate
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">fi</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># alias</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span>alias brew<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin brew&#39;</span> 
</span></span><span style="display:flex;"><span>alias ls<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;ls -G&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>alias brew<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin brew&#39;</span>
</span></span><span style="display:flex;"><span>alias sed<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;gsed&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>alias clean<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;rm -rf ~/Library/Developer/Xcode/DerivedData&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>alias diff<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;colordiff&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>alias vi<span style="color:#f92672">=</span>vim
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 環境変数</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># path</span>
</span></span><span style="display:flex;"><span>export PATH<span style="color:#f92672">=</span>/usr/local/bin:/usr/local/sbin:/usr/sbin:/sbin:$PATH
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># starship</span>
</span></span><span style="display:flex;"><span>eval <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>starship init zsh<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># android</span>
</span></span><span style="display:flex;"><span>export ANDROID_NDK_ROOT<span style="color:#f92672">=</span>$HOME/Library/Android/sdk/ndk/24.0.8215888
</span></span><span style="display:flex;"><span>export ANDROID_NDK_HOME<span style="color:#f92672">=</span>$HOME/Library/Android/sdk/ndk/24.0.8215888
</span></span><span style="display:flex;"><span>export ANDROID_HOME<span style="color:#f92672">=</span>$HOME/Library/Android/sdk
</span></span><span style="display:flex;"><span>export PATH<span style="color:#f92672">=</span>$ANDROID_HOME/bin:$PATH:<span style="color:#e6db74">${</span>HOME<span style="color:#e6db74">}</span>/Library/Android/sdk/platform-tools:$HOME/Library/Android/sdk/tools/bin
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># plantuml</span>
</span></span><span style="display:flex;"><span>export PLANTUML_LIMIT_SIZE<span style="color:#f92672">=</span><span style="color:#ae81ff">32768</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># nodebrew</span>
</span></span><span style="display:flex;"><span>export PATH<span style="color:#f92672">=</span>$HOME/.nodebrew/current/bin:$PATH
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># homebrew</span>
</span></span><span style="display:flex;"><span>export PATH<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/usr/local/sbin:</span>$PATH<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># zsh関連</span>
</span></span><span style="display:flex;"><span>source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
</span></span><span style="display:flex;"><span>source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> type brew &amp;&gt;/dev/null; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span>    FPATH<span style="color:#f92672">=</span>/usr/local/share/zsh-completions:/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8.1/functions
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    autoload -Uz compinit
</span></span><span style="display:flex;"><span>    compinit
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">fi</span>
</span></span></code></pre></div><h2 id="starshipの設定">starshipの設定</h2>
<p>mkdir -p ~/.config &amp;&amp; touch ~/.config/starship.toml</p>
<pre tabindex="0"><code>[directory]
#ディレクトリ表示
truncation_length = 100
truncate_to_repo = false

[memory_usage]
disabled = false
threshold = -1
symbol = &#34; &#34;
style = &#34;bold dimmed blue&#34;
format = &#34;$symbol[${ram}( | ${swap})]($style) &#34;


[battery]
full_symbol = &#34;🔋&#34;
charging_symbol = &#34;🔌&#34;
discharging_symbol = &#34;⚡&#34;

[[battery.display]]
#バッテリーを表示するタイミング、表示する際の文字のスタイル
threshold = 100
style = &#34;bold blue&#34;

[time]
#時間の表示をオンにして12時間表示に
use_12hr = false
time_format = &#34;%T&#34;
format = &#34;🕙 $time($style) &#34;
style = &#34;bright-white&#34;
disabled = false


[package]
disabled = true

[cmd_duration]
min_time = 10_000  # Show command duration over 10,000 milliseconds (=10 sec)
format = &#34; took [$duration]($style)&#34;

[character]
success_symbol = &#34;[➜](bold green) &#34;
error_symbol = &#34;[✗](bold red) &#34;

[git_branch]
format = &#34; [$symbol$branch]($style) &#34;
symbol = &#34;🍣 &#34;
style = &#34;bold yellow&#34;

[git_commit]
commit_hash_length = 8
style = &#34;bold white&#34;

[git_state]
format = &#39;[\($state( $progress_current of $progress_total)\)]($style) &#39;

[git_status]
conflicted = &#34;⚔️ &#34;
ahead = &#34;🏎️ 💨 ×${count}&#34;
behind = &#34;🐢 ×${count}&#34;
diverged = &#34;🔱 🏎️ 💨 ×${ahead_count} 🐢 ×${behind_count}&#34;
untracked = &#34;🛤️  ×${count}&#34;
stashed = &#34;📦 &#34;
modified = &#34;📝 ×${count}&#34;
staged = &#34;🗃️  ×${count}&#34;
renamed = &#34;📛 ×${count}&#34;
deleted = &#34;🗑️  ×${count}&#34;
style = &#34;bright-white&#34;
format = &#34;$all_status$ahead_behind&#34;

[python]
format = &#34;[$symbol$version]($style) &#34;
style = &#34;bold green&#34;

[rust]
format = &#34;[$symbol$version]($style) &#34;
style = &#34;bold green&#34;

[username]
style_user = &#34;bold dimmed blue&#34;
show_always = false
</code></pre>
              ]]></content:encoded></item><item><title>GORMでtime型をするときの注意</title><link>https://kodawari.info/posts/gorm%E3%81%A7time%E5%9E%8B%E3%82%92%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E6%B3%A8%E6%84%8F/</link><pubDate>Thu, 30 Jun 2022 19:41:20 +0900</pubDate><guid>https://kodawari.info/posts/gorm%E3%81%A7time%E5%9E%8B%E3%82%92%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E6%B3%A8%E6%84%8F/</guid><description>GORMでtime型をするときの注意 GORMで構造体をマイグレーションしたときに 以下のようにしてもtime型にはならなかった、、、 type test struct { BreakTime</description><content:encoded><![CDATA[
              <h1 id="gormでtime型をするときの注意">GORMでtime型をするときの注意</h1>
<p>GORMで構造体をマイグレーションしたときに
以下のようにしてもtime型にはならなかった、、、</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#66d9ef">type</span> <span style="color:#a6e22e">test</span> <span style="color:#66d9ef">struct</span> {
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">BreakTime</span>                  <span style="color:#f92672">*</span><span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Time</span>               <span style="color:#e6db74">`gorm:&#34;type:time;comment:休憩時間&#34;`</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>↓ マイグレすると</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sql" data-lang="sql"><span style="display:flex;"><span><span style="color:#66d9ef">create</span> <span style="color:#66d9ef">table</span> test
</span></span><span style="display:flex;"><span>(
</span></span><span style="display:flex;"><span>    break_time                   <span style="color:#66d9ef">timestamp</span> <span style="color:#66d9ef">with</span> time <span style="color:#66d9ef">zone</span>,
</span></span><span style="display:flex;"><span>);
</span></span></code></pre></div><p>となった、</p>
<p>どうも、「time」のあとにスペースを入れれば解決するみたい。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#66d9ef">type</span> <span style="color:#a6e22e">test</span> <span style="color:#66d9ef">struct</span> {
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">BreakTime</span>                  <span style="color:#f92672">*</span><span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Time</span>               <span style="color:#e6db74">`gorm:&#34;type:time ;comment:休憩時間&#34;`</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>↓ マイグレすると</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sql" data-lang="sql"><span style="display:flex;"><span><span style="color:#66d9ef">create</span> <span style="color:#66d9ef">table</span> test
</span></span><span style="display:flex;"><span>(
</span></span><span style="display:flex;"><span>    break_time                   time,
</span></span><span style="display:flex;"><span>);
</span></span></code></pre></div><p>時間がかかったけどこんな事があるのだと。。。。。</p>

              ]]></content:encoded></item><item><title>時間の取り扱い方</title><link>https://kodawari.info/posts/%E6%99%82%E9%96%93%E3%81%AE%E5%8F%96%E3%82%8A%E6%89%B1%E3%81%84%E6%96%B9/</link><pubDate>Thu, 30 Jun 2022 11:56:12 +0900</pubDate><guid>https://kodawari.info/posts/%E6%99%82%E9%96%93%E3%81%AE%E5%8F%96%E3%82%8A%E6%89%B1%E3%81%84%E6%96%B9/</guid><description>time型を取得する time.Time型の変数を取得する方法。 現在時刻から取得する fmt.Println(time.Now()) // Output: // 2009-11-10 23:00:00 +0000 UTC 日付から取得する fmt.Println(time.Date(2014, time.December, 31, 12, 13, 24, 0, time.UTC)) // Output: // 2014-12-31 12:13:24</description><content:encoded><![CDATA[
              <h1 id="time型を取得する">time型を取得する</h1>
<p><code>time.Time型</code>の変数を取得する方法。</p>
<h2 id="現在時刻から取得する">現在時刻から取得する</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Now</span>())
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Output: 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">// 2009-11-10 23:00:00 +0000 UTC
</span></span></span></code></pre></div><h2 id="日付から取得する">日付から取得する</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Date</span>(<span style="color:#ae81ff">2014</span>, <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">December</span>, <span style="color:#ae81ff">31</span>, <span style="color:#ae81ff">12</span>, <span style="color:#ae81ff">13</span>, <span style="color:#ae81ff">24</span>, <span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">UTC</span>))
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Output:
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">// 2014-12-31 12:13:24 +0000 UTC
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">loc</span>, <span style="color:#a6e22e">_</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">LoadLocation</span>(<span style="color:#e6db74">&#34;Asia/Tokyo&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Date</span>(<span style="color:#ae81ff">2014</span>, <span style="color:#ae81ff">12</span>, <span style="color:#ae81ff">31</span>, <span style="color:#ae81ff">8</span>, <span style="color:#ae81ff">4</span>, <span style="color:#ae81ff">18</span>, <span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">loc</span>))
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Output:
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">// 2014-12-31 08:04:18 +0900 JST
</span></span></span></code></pre></div><h2 id="文字列から取得する">文字列から取得する</h2>
<pre tabindex="0"><code>t, _ := time.Parse(&#34;2006-01-02&#34;, &#34;2014-12-31&#34;)
fmt.Println(t)
// Output:
// 2014-12-31 00:00:00 +0000 UTC
</code></pre><pre tabindex="0"><code>t, _ := time.Parse(&#34;2006-01-02 15:04:05 MST&#34;, &#34;2014-12-31 12:31:24 JST&#34;)
fmt.Println(t)
// Output:
// 2014-12-31 12:31:24 +0900 JST
</code></pre><h2 id="unix-timestampから変換">Unix TimeStampから変換</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Unix</span>(<span style="color:#ae81ff">1419933529</span>, <span style="color:#ae81ff">0</span>))
</span></span><span style="display:flex;"><span><span style="color:#75715e">// Output:
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">// 2014-12-30 09:58:49 +0000 UTC
</span></span></span></code></pre></div><p>第2引数でナノ秒を指定できる。</p>
<h1 id="時刻の編集">時刻の編集</h1>
<p>時刻の操作や差分を確認する場合、Duration型を取り扱うことになる。中身はint64。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#66d9ef">type</span> <span style="color:#a6e22e">Duration</span> <span style="color:#66d9ef">int64</span>
</span></span></code></pre></div><p>明示的にDuration型を使うことによって、時刻操作していることをわかりやすくできる。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">reflect</span>.<span style="color:#a6e22e">TypeOf</span>(<span style="color:#ae81ff">1</span>))               <span style="color:#75715e">// int
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">reflect</span>.<span style="color:#a6e22e">TypeOf</span>(<span style="color:#ae81ff">1</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Second</span>)) <span style="color:#75715e">// time.Duration
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">reflect</span>.<span style="color:#a6e22e">TypeOf</span>(<span style="color:#ae81ff">1</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Hour</span>))   <span style="color:#75715e">// time.Duration
</span></span></span></code></pre></div><h2 id="後の時刻を取得する">○○後の時刻を取得する</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t</span>) <span style="color:#75715e">// 2014-12-20 00:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t2</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">Add</span>(<span style="color:#ae81ff">1</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Minute</span>) <span style="color:#75715e">// 1分後
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t2</span>)              <span style="color:#75715e">// 2014-12-20 00:01:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t3</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">Add</span>(<span style="color:#ae81ff">1</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Hour</span>) <span style="color:#75715e">// 1時間後
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t3</span>)            <span style="color:#75715e">// 2014-12-20 01:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t4</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">Add</span>(<span style="color:#ae81ff">24</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Hour</span>) <span style="color:#75715e">// 1日後 (time.Dayは標準には無い)
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t4</span>)             <span style="color:#75715e">// 2014-12-21 00:00:00 +0900 JST
</span></span></span></code></pre></div><p>1日後の場合は<code>time.AddDate()</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t</span>) <span style="color:#75715e">// 2014-12-20 00:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t2</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">AddDate</span>(<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">1</span>) <span style="color:#75715e">// 1日後
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t2</span>)          <span style="color:#75715e">// 2014-12-21 00:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t3</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">AddDate</span>(<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>) <span style="color:#75715e">// 1ヶ月後
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t3</span>)          <span style="color:#75715e">// 2015-01-20 00:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t4</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">AddDate</span>(<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>) <span style="color:#75715e">// 1年後
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t4</span>)          <span style="color:#75715e">// 2015-12-20 00:00:00 +0900 JST
</span></span></span></code></pre></div><h2 id="前の時刻を取得する">○○前の時刻を取得する</h2>
<p><code>time.Add()</code>に-を入れられる</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t</span>) <span style="color:#75715e">// 2014-12-20 00:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t2</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">Add</span>(<span style="color:#f92672">-</span><span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Minute</span>) <span style="color:#75715e">// 1分前
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t2</span>)           <span style="color:#75715e">// 2014-12-19 23:59:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t3</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">Add</span>(<span style="color:#f92672">-</span><span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Hour</span>) <span style="color:#75715e">// 1時間前
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t3</span>)         <span style="color:#75715e">// 2014-12-19 23:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t4</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">Add</span>(<span style="color:#f92672">-</span><span style="color:#ae81ff">24</span> <span style="color:#f92672">*</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Hour</span>) <span style="color:#75715e">// 1日前
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t4</span>)              <span style="color:#75715e">// 2014-12-19 00:00:00 +0900 JST
</span></span></span></code></pre></div><p><code>time.AddDate()</code>でマイナスを入れれば過去になる</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t</span>) <span style="color:#75715e">// 2014-12-20 00:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t2</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">AddDate</span>(<span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>) <span style="color:#75715e">// 1日前
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t2</span>)           <span style="color:#75715e">// 2014-12-19 00:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t3</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">AddDate</span>(<span style="color:#ae81ff">0</span>, <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>) <span style="color:#75715e">// 1ヶ月前
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t3</span>)           <span style="color:#75715e">// 2014-11-20 00:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t4</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">t</span>.<span style="color:#a6e22e">AddDate</span>(<span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>) <span style="color:#75715e">// 1年前
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t4</span>)           <span style="color:#75715e">// 2013-12-20 00:00:00 +0900 JST
</span></span></span></code></pre></div><h2 id="2つの時刻を比較する">2つの時刻を比較する</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">t1</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Date</span>(<span style="color:#ae81ff">2014</span>, <span style="color:#ae81ff">12</span>, <span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">12</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">loc</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t1</span>) <span style="color:#75715e">// 2014-12-20 12:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t2</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Date</span>(<span style="color:#ae81ff">2014</span>, <span style="color:#ae81ff">12</span>, <span style="color:#ae81ff">20</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">loc</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t2</span>) <span style="color:#75715e">// 2014-12-20 00:00:00 +0900 JST
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">t1</span>.<span style="color:#a6e22e">Sub</span>(<span style="color:#a6e22e">t2</span>)) <span style="color:#75715e">// 12h0m0s
</span></span></span></code></pre></div><h2 id="現在時刻からどれだけ前か調べる">現在時刻からどれだけ前か調べる</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-go" data-lang="go"><span style="display:flex;"><span><span style="color:#a6e22e">loc</span>, <span style="color:#a6e22e">_</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">LoadLocation</span>(<span style="color:#e6db74">&#34;Asia/Tokyo&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">t1</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Date</span>(<span style="color:#ae81ff">2009</span>, <span style="color:#ae81ff">11</span>, <span style="color:#ae81ff">8</span>, <span style="color:#ae81ff">8</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">0</span>, <span style="color:#a6e22e">loc</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">d</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Since</span>(<span style="color:#a6e22e">t1</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">d</span>) <span style="color:#75715e">// 72h0m0s (Go Playgroundで実行した場合)
</span></span></span></code></pre></div><p><code>time.Since(t)</code>は<code>time.Now().Sub(t)</code>の省略形。</p>

              ]]></content:encoded></item><item><title>UIButtonの文字の設定</title><link>https://kodawari.info/posts/uibutton%E3%81%AE%E6%96%87%E5%AD%97%E3%81%AE%E8%A8%AD%E5%AE%9A/</link><pubDate>Thu, 30 Jun 2022 09:54:44 +0900</pubDate><guid>https://kodawari.info/posts/uibutton%E3%81%AE%E6%96%87%E5%AD%97%E3%81%AE%E8%A8%AD%E5%AE%9A/</guid><description>UIButtonの文字の設定 ボタンの設定 UIButton をコード上で使用することで、ボタンを追加することができます。 追加する時に、各状態になった場合のボタ</description><content:encoded><![CDATA[
              <h1 id="uibuttonの文字の設定">UIButtonの文字の設定</h1>
<h2 id="ボタンの設定">ボタンの設定</h2>
<p>UIButton をコード上で使用することで、ボタンを追加することができます。
追加する時に、各状態になった場合のボタンのタイトル、色などを指定することができます。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">//ボタンの宣言
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>UIButton <span style="color:#f92672">*</span>button <span style="color:#f92672">=</span> [[UIButton alloc]init];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//タイトル・テキスト色・画像　通常
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button setTitle:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;ボタン&#34;</span> forState:UIControlStateNormal];
</span></span><span style="display:flex;"><span>[button setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
</span></span><span style="display:flex;"><span>[button setImage:[UIImage imageNamed:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;image&#34;</span>] forState:UIControlStateNormal];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//タイトル・テキスト色・画像　押下中
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button setTitle:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;押下中&#34;</span> forState:UIControlStateHighlighted];
</span></span><span style="display:flex;"><span>[button setTitleColor:[UIColor blackColor] forState:UIControlStateHighlighted];
</span></span><span style="display:flex;"><span>[button setImage:[UIImage imageNamed:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;image&#34;</span>] forState:UIControlStateHighlighted];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//タイトル・テキスト色・画像　選択中
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button setTitle:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;選択中&#34;</span> forState:UIControlStateSelected];
</span></span><span style="display:flex;"><span>[button setTitleColor:[UIColor blackColor] forState:UIControlStateSelected];
</span></span><span style="display:flex;"><span>[button setImage:[UIImage imageNamed:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;image&#34;</span>] forState:UIControlStateSelected];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//タイトル・テキスト色・画像　無効中
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button setTitle:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;無効&#34;</span> forState:UIControlStateDisabled];
</span></span><span style="display:flex;"><span>[button setTitleColor:[UIColor blackColor] forState:UIControlStateDisabled];
</span></span><span style="display:flex;"><span>[button setImage:[UIImage imageNamed:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;image&#34;</span>] forState:UIControlStateDisabled];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//フォントサイズ
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button.titleLabel setFont:[UIFont systemFontOfSize:<span style="color:#ae81ff">30</span>]];
</span></span><span style="display:flex;"><span><span style="color:#75715e">//背景色
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button setBackgroundColor:[UIColor redColor]];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//画面に追加
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[self.view addSubview:button];
</span></span></code></pre></div><h2 id="枠線の設定">枠線の設定</h2>
<p>枠線の色は setBorderColor 、枠線の太さは setBorderWidth 、角丸の丸みは setCornerRadius 、
で指定するができます。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">//枠線の色
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button.layer setBorderColor:[UIColor blackColor].CGColor];
</span></span><span style="display:flex;"><span><span style="color:#75715e">//枠線の太さ
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button.layer setBorderWidth:<span style="color:#ae81ff">2.0</span>];
</span></span><span style="display:flex;"><span><span style="color:#75715e">//角丸の指定
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button.layer setCornerRadius:<span style="color:#ae81ff">5.0</span>];
</span></span></code></pre></div><h2 id="押下時の動作">押下時の動作</h2>
<p>ボタンを選択した時の動作を追加する場合、 -(void)関数名:(UIButton *)button で動作を指定して、
ボタン追加時に addTarget で関数を指定する必要あります。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">//押下時の動作
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button addTarget:self action:<span style="color:#960050;background-color:#1e0010">@</span>selector(button_select:) forControlEvents:UIControlEventTouchUpInside];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">-</span>(<span style="color:#66d9ef">void</span>)button_select:(UIButton <span style="color:#f92672">*</span>)button {
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">//ボタンを選択中に変更する。
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    button.selected <span style="color:#f92672">=</span> true;
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">//ボタンを無効中に変更する
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    button.enabled <span style="color:#f92672">=</span> false;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="大きさなどの変更">大きさなどの変更</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>    CGRect frame2 <span style="color:#f92672">=</span> CGRectMake(_overlayView.frame.size.width <span style="color:#f92672">-</span> <span style="color:#ae81ff">40</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">40</span>, <span style="color:#ae81ff">40</span>);
</span></span><span style="display:flex;"><span>    self.closeButton.frame <span style="color:#f92672">=</span> frame2;
</span></span></code></pre></div>
              ]]></content:encoded></item><item><title>goプロジェクトを自動でUML図に出力するツール</title><link>https://kodawari.info/posts/go%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E8%87%AA%E5%8B%95%E3%81%A7uml%E5%9B%B3%E3%81%AB%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B%E3%83%84%E3%83%BC%E3%83%AB/</link><pubDate>Tue, 21 Jun 2022 18:20:23 +0900</pubDate><guid>https://kodawari.info/posts/go%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E8%87%AA%E5%8B%95%E3%81%A7uml%E5%9B%B3%E3%81%AB%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B%E3%83%84%E3%83%BC%E3%83%AB/</guid><description>go言語のプロジェクトを可視化したいと思いPlantUMLで自動で出来たらなと。 2つ見つけました。 goplantumlとgoumlです。 前者</description><content:encoded><![CDATA[
              <p>go言語のプロジェクトを可視化したいと思いPlantUMLで自動で出来たらなと。</p>
<p>2つ見つけました。</p>
<p><a href="https://github.com/jfeliu007/goplantuml">goplantuml</a>と<a href="https://github.com/kazukousen/gouml">gouml</a>です。</p>
<p>前者の<a href="https://github.com/jfeliu007/goplantuml">goplantuml</a>は、
結構有名でよく紹介されており、メンテが数ヶ月前にされているようです。</p>
<p>後者の<a href="https://github.com/kazukousen/gouml">gouml</a>と言うものですが、数年前から開発がとまっていて、</p>
<p>goのver1.18でコンパイルして実行してみると表示が出来ない部分があったので、</p>
<p>それで、最新のモジュールに差し替えて、みました。
<a href="https://github.com/tama-jp/gouml">こちら</a>にあります。</p>
<p>Macなら以下で動くと思います。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>git clone https://github.com/tama-jp/gouml.git
</span></span><span style="display:flex;"><span>cd gouml/cmd/gouml
</span></span><span style="display:flex;"><span>go build -o /usr/local/bin/gouml main.go
</span></span><span style="display:flex;"><span>gouml --version 
</span></span></code></pre></div><p>このふたつのツールを<a href="https://github.com/sue445/plant_erd">plant_erd</a>という、データベースをplantumlでER図を生成するソースを試しにしてみました。</p>
<p>goplantuml
<img src="../img/2022-06-21-sample.png" alt="2022-06-21-sample.png"></p>
<p>gouml
<img src="../img/2022-06-21-file.png" alt="2022-06-21-file.png"></p>
<p>でかたが違う。。。。(´ヘ｀;)　う〜ん・・・。どちらがいいのかがわかりません。</p>
<p>ただ、goumlは、戻り値にメソッドが使われたときの軌跡はわかるので、個人的にはこっちがいいと感じますが。。。。</p>
<p>皆さんどうしてるんだろ。。。。．</p>

              ]]></content:encoded></item><item><title>時刻ではまった</title><link>https://kodawari.info/posts/2022-06-07-00-19-49-time/</link><pubDate>Tue, 07 Jun 2022 00:19:50 +0000</pubDate><guid>https://kodawari.info/posts/2022-06-07-00-19-49-time/</guid><description>時刻ではまった。。。。 文字列をtime型にしてからunixtimeに入れようとしたら、 timeStr := &amp;#34;2022-06-07 09:00:00&amp;#34; layout := &amp;#34;2006-01-02 15:04:05&amp;#34; timeData, _ = time.Parse(layout, timeStr) fmt.Println(timeData.Unix()) # =&amp;gt; 1654592400 タイムゾーンが、日本</description><content:encoded><![CDATA[
              <p>時刻ではまった。。。。
文字列をtime型にしてからunixtimeに入れようとしたら、</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-golang" data-lang="golang"><span style="display:flex;"><span><span style="color:#a6e22e">timeStr</span> <span style="color:#f92672">:=</span> <span style="color:#e6db74">&#34;2022-06-07 09:00:00&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">layout</span> <span style="color:#f92672">:=</span> <span style="color:#e6db74">&#34;2006-01-02 15:04:05&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">timeData</span>, <span style="color:#a6e22e">_</span> = <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Parse</span>(<span style="color:#a6e22e">layout</span>, <span style="color:#a6e22e">timeStr</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">timeData</span>.<span style="color:#a6e22e">Unix</span>()) <span style="color:#960050;background-color:#1e0010">#</span> =&gt; <span style="color:#ae81ff">1654592400</span>
</span></span></code></pre></div><p>タイムゾーンが、日本に設定してないので、UTCになっているみたい。
time.Parseを使用せずに、locationを設定できるtime.ParseInLocationを使用するとうまく行く。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-golang" data-lang="golang"><span style="display:flex;"><span><span style="color:#a6e22e">timeStr</span> <span style="color:#f92672">:=</span> <span style="color:#e6db74">&#34;2022-06-07 09:00:00&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">layout</span> <span style="color:#f92672">:=</span> <span style="color:#e6db74">&#34;2006-01-02 15:04:05&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">tz</span>, <span style="color:#a6e22e">err</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">LoadLocation</span>(<span style="color:#e6db74">&#34;Asia/Tokyo&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> <span style="color:#a6e22e">err</span> <span style="color:#f92672">!=</span> <span style="color:#66d9ef">nil</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">err</span>)
</span></span><span style="display:flex;"><span>    panic(<span style="color:#a6e22e">err</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">timeData</span>, <span style="color:#a6e22e">err</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">ParseInLocation</span>(<span style="color:#a6e22e">layout</span>, <span style="color:#a6e22e">str</span>, <span style="color:#a6e22e">tz</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> <span style="color:#a6e22e">err</span> <span style="color:#f92672">!=</span> <span style="color:#66d9ef">nil</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">err</span>)
</span></span><span style="display:flex;"><span>    panic(<span style="color:#a6e22e">err</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">timeData</span>.<span style="color:#a6e22e">Unix</span>()) <span style="color:#960050;background-color:#1e0010">#</span> =&gt; <span style="color:#ae81ff">1654562457</span>
</span></span></code></pre></div><p>適当に作った関数のおかげで悩んでもうた。。。。。(・∀・)</p>

              ]]></content:encoded></item><item><title>HUGOの画像の置き方</title><link>https://kodawari.info/posts/hugo%E3%81%AE%E7%94%BB%E5%83%8F%E3%81%AE%E7%BD%AE%E3%81%8D%E6%96%B9/</link><pubDate>Mon, 06 Jun 2022 16:51:49 +0900</pubDate><guid>https://kodawari.info/posts/hugo%E3%81%AE%E7%94%BB%E5%83%8F%E3%81%AE%E7%BD%AE%E3%81%8D%E6%96%B9/</guid><description>どうやら、ファイル名が変換されてフォルダ名として扱っちゃうみたいなので、 同じディレクトリ内なら ![代替テキスト](../thank_you.</description><content:encoded><![CDATA[
              <p>どうやら、ファイル名が変換されてフォルダ名として扱っちゃうみたいなので、
同じディレクトリ内なら</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>![<span style="color:#f92672">代替テキスト</span>](<span style="color:#a6e22e">../thank_you.png</span>)
</span></span></code></pre></div><p>↓</p>
<p><img src="../thank_you.png" alt="代替テキスト"></p>
<p>一つ下なら</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>![<span style="color:#f92672">代替テキスト</span>](<span style="color:#a6e22e">../img/sorry.png</span>)
</span></span></code></pre></div><p>↓</p>
<p><img src="../img/sorry.png" alt="代替テキスト"></p>
<p>でなります。</p>

              ]]></content:encoded></item><item><title>HUGO便利スクリプト</title><link>https://kodawari.info/posts/hugo%E4%BE%BF%E5%88%A9%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88/</link><pubDate>Mon, 06 Jun 2022 14:28:28 +0900</pubDate><guid>https://kodawari.info/posts/hugo%E4%BE%BF%E5%88%A9%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88/</guid><description>HUGOの使い方がようやくわかってきて、今必死ですw コンテントを作成する時 hugo new post/なんたらー.md って、書かなきゃならなく、中身もちょ</description><content:encoded><![CDATA[
              <p>HUGOの使い方がようやくわかってきて、今必死ですw</p>
<p>コンテントを作成する時</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>hugo new post/なんたらー.md
</span></span></code></pre></div><p>って、書かなきゃならなく、中身もちょびちょび書き直さなければならない。
これって面倒ですね。</p>
<p>っで、下のサイトの方がスクリプトを書いてました。便利便利♪</p>
<p><a href="https://techblog.sgr-ksmt.dev/2016/02/05/hugo_new_post/">https://techblog.sgr-ksmt.dev/2016/02/05/hugo_new_post/</a></p>
<ul>
<li>
<p>毎回post/と付けるのを省きたい</p>
</li>
<li>
<p>markdownファイル名の前に日付を付けたい</p>
</li>
</ul>
<p>ホント助かりました。</p>
<p>ただ、記事が古いのか「設定」などが「=」で書かれていてうまく動かなかったので、
直して使ってます。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#75715e">#!/bin/bash
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>set -u
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>usage<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  echo <span style="color:#e6db74">&#34;Usage : </span>$0<span style="color:#e6db74"> [-w] [title_name]&#34;</span> 1&gt;&amp;<span style="color:#ae81ff">2</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>main <span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  cd <span style="color:#66d9ef">$(</span>cd <span style="color:#66d9ef">$(</span>dirname $0<span style="color:#66d9ef">)</span> <span style="color:#f92672">&amp;&amp;</span> pwd<span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>  OPEN_EDITOR<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> ARG; <span style="color:#66d9ef">do</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$ARG<span style="color:#e6db74">&#34;</span> in
</span></span><span style="display:flex;"><span>      -*<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">while</span> getopts w OPT <span style="color:#e6db74">&#34;</span>$ARG<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">do</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$OPT<span style="color:#e6db74">&#34;</span> in
</span></span><span style="display:flex;"><span>          w<span style="color:#f92672">)</span> OPEN_EDITOR<span style="color:#f92672">=</span>1;;
</span></span><span style="display:flex;"><span>          *<span style="color:#f92672">)</span> usage; exit 1;;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">esac</span>
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">done</span>
</span></span><span style="display:flex;"><span>      ;;
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">esac</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">done</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  shift <span style="color:#66d9ef">$(</span>expr $OPTIND - 1<span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">[</span> $# -ne <span style="color:#ae81ff">1</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> usage <span style="color:#f92672">&amp;&amp;</span> exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  slug<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>  file_name<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;posts/</span><span style="color:#66d9ef">$(</span>date +<span style="color:#e6db74">&#34;%Y-%m-%d-%H-%M-%S&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">-</span><span style="color:#e6db74">${</span>slug<span style="color:#e6db74">}</span><span style="color:#e6db74">.md&#34;</span>
</span></span><span style="display:flex;"><span>  file_path<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;content/</span>$file_name<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> ! -e <span style="color:#e6db74">&#34;</span>$file_path<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span>    hugo new <span style="color:#e6db74">&#34;</span>$file_name<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>    sed -i <span style="color:#e6db74">&#39;&#39;</span> <span style="color:#e6db74">&#34;s/title: \&#34;.*\&#34;/title: \&#34;</span>$slug<span style="color:#e6db74">\&#34;/g&#34;</span> <span style="color:#e6db74">&#34;</span>$file_path<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>    sed -i <span style="color:#e6db74">&#39;&#39;</span> <span style="color:#e6db74">&#34;s/slug: \&#34;.*\&#34;/slug: \&#34;</span>$slug<span style="color:#e6db74">\&#34;/g&#34;</span> <span style="color:#e6db74">&#34;</span>$file_path<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">else</span>
</span></span><span style="display:flex;"><span>    echo <span style="color:#e6db74">&#34;</span>$file_name<span style="color:#e6db74"> already exists.&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">fi</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">[</span> $OPEN_EDITOR -eq <span style="color:#ae81ff">1</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> atom <span style="color:#e6db74">&#34;</span>$file_path<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>main <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
</span></span></code></pre></div>
              ]]></content:encoded></item><item><title>HUGOのインストール</title><link>https://kodawari.info/posts/hugo%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link><pubDate>Mon, 06 Jun 2022 14:28:23 +0900</pubDate><guid>https://kodawari.info/posts/hugo%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid><description>ほぼここを見ればすぐできます。 これに、私は、テーマをMainroadにしました。</description><content:encoded><![CDATA[
              <p>ほぼ<a href="https://gohugo.io/getting-started/quick-start/">ここ</a>を見ればすぐできます。</p>
<p>これに、私は、テーマを<a href="https://github.com/Vimux/Mainroad">Mainroad</a>にしました。</p>

              ]]></content:encoded></item><item><title>初めまして</title><link>https://kodawari.info/posts/2022-06-05-02-43-45-my-first-post/</link><pubDate>Sun, 05 Jun 2022 02:43:45 +0900</pubDate><guid>https://kodawari.info/posts/2022-06-05-02-43-45-my-first-post/</guid><description>たまたんです。久しぶりにブログ再開です。 今回から、 Hugo で作成を挑戦してみます。 よろしくお願いいたします。m(__)m</description><content:encoded><![CDATA[
              <p>たまたんです。久しぶりにブログ再開です。</p>
<p>今回から、 <strong>Hugo</strong> で作成を挑戦してみます。</p>
<p>よろしくお願いいたします。m(__)m</p>

              ]]></content:encoded></item></channel></rss>