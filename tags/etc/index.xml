<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>ETC on Ko-Da-Wa-Ri</title><link>https://kodawari.info/tags/etc/</link><description>Recent content in ETC on Ko-Da-Wa-Ri</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 23 Apr 2024 15:35:49 +0900</lastBuildDate><atom:link href="https://kodawari.info/tags/etc/index.xml" rel="self" type="application/rss+xml"/><item><title>2024 04 23 15 35 49 CentOS6でのリポジトリを取得する方法</title><link>https://kodawari.info/posts/2024-04-23-15-35-49-centos6%E3%81%A7%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</link><pubDate>Tue, 23 Apr 2024 15:35:49 +0900</pubDate><guid>https://kodawari.info/posts/2024-04-23-15-35-49-centos6%E3%81%A7%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E5%8F%96%E5%BE%97%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95/</guid><description>mirrorlist定数をコメントアウトして、 baseurl=https://archive.kernel.org/centos-vault</description><content:encoded><![CDATA[
              <p>mirrorlist定数をコメントアウトして、</p>
<pre tabindex="0"><code>baseurl=https://archive.kernel.org/centos-vault/[OSのバージョン]/xxxx/$basearch/
</code></pre><p>に置き換え。xxxは、各自のディレクトリにあわせます。</p>
<p>DockerのCentOS6.9では、以下のようになります。</p>
<pre tabindex="0"><code>[base]
name=CentOS-$releasever - Base
#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os&amp;infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/
#baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/
baseurl=https://archive.kernel.org/centos-vault/6.9/os/$basearch/

gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6

#released updates 
[updates]
name=CentOS-$releasever - Updates
#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates&amp;infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/
baseurl=https://archive.kernel.org/centos-vault/6.9/updates/$basearch/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6

#additional packages that may be useful
[extras]
name=CentOS-$releasever - Extras
#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras&amp;infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/extras/$basearch/
baseurl=https://archive.kernel.org/centos-vault/6.9/extras/$basearch/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6

#additional packages that extend functionality of existing packages
[centosplus]
name=CentOS-$releasever - Plus
#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus&amp;infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/centosplus/$basearch/
baseurl=https://archive.kernel.org/centos-vault/6.9/centosplus/$basearch/
gpgcheck=1
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6

#contrib - packages by Centos Users
[contrib]
name=CentOS-$releasever - Contrib
#mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=contrib&amp;infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/contrib/$basearch/
baseurl=https://archive.kernel.org/centos-vault/6.9/contrib/$basearch/
gpgcheck=1
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6
</code></pre><p>早く、別OSにしなければならないけど、とりあえずならこれで延命処置が出来て助かります。ε-(´∀｀*)ﾎｯ</p>

              ]]></content:encoded></item><item><title>ハード作成の面白いサイト</title><link>https://kodawari.info/posts/2024-04-21-08-47-15-%E3%83%8F%E3%83%BC%E3%83%89%E4%BD%9C%E6%88%90%E3%81%AE%E9%9D%A2%E7%99%BD%E3%81%84%E3%82%B5%E3%82%A4%E3%83%88/</link><pubDate>Sun, 21 Apr 2024 08:47:15 +0900</pubDate><guid>https://kodawari.info/posts/2024-04-21-08-47-15-%E3%83%8F%E3%83%BC%E3%83%89%E4%BD%9C%E6%88%90%E3%81%AE%E9%9D%A2%E7%99%BD%E3%81%84%E3%82%B5%E3%82%A4%E3%83%88/</guid><description>４歳の息子がよく見ている段ボールで作る何ちゃらがあるんですけど。 今回ドリンクバーでして、これの装置だけでもあったら楽しいなぁ って思いました。</description><content:encoded><![CDATA[
              <p>４歳の息子がよく見ている段ボールで作る何ちゃらがあるんですけど。
今回ドリンクバーでして、これの装置だけでもあったら楽しいなぁ
って思いました。</p>
<p><a href="https://www.youtube.com/watch?v=qMYM1qFy8eA">https://www.youtube.com/watch?v=qMYM1qFy8eA</a></p>
<p>どんな材料いるのかなと思ったら、このサイトに書いてました。
こう言う、「マイクロ真空ポンプ」ってのがあると知りました。</p>
<p>そこで紹介されていたサイトが、結構素人でも作れそうな紹介だったんです。</p>
<p>それがここ。</p>
<p><a href="https://elchika.com/">https://elchika.com/</a></p>
<p>難しいのや高いものはあるんですけど、これをヒントに何か作れたらなぁと。</p>

              ]]></content:encoded></item><item><title>最近更新できてないなぁ。。。。</title><link>https://kodawari.info/posts/2024-04-19-17-43-50-%E6%9C%80%E8%BF%91/</link><pubDate>Fri, 19 Apr 2024 17:43:50 +0900</pubDate><guid>https://kodawari.info/posts/2024-04-19-17-43-50-%E6%9C%80%E8%BF%91/</guid><description>最近全然ブログが更新できていない。（；^ω^） hugo + git hub でブログをかけるようにしたら、便利かと思ったら、 最初にブログを追加するのが面倒、 git</description><content:encoded><![CDATA[
              <p>最近全然ブログが更新できていない。（；^ω^）</p>
<p>hugo + git hub でブログをかけるようにしたら、便利かと思ったら、 最初にブログを追加するのが面倒、
gitに上げるのもPCでしかできないから面倒、で全然更新がおろそかになってる。</p>
<p>まぁ、それだけじゃないのかもしれないけど。</p>
<p>そこで、code-serverを入れて、Web上のエディタでどこでも書けるようにして、それをgitであげようと考えました。(⌒〜⌒)ニンマリ</p>
<p>さぁ、うまく行くのやら。。。。</p>
<p>これからなんとかいろいろなものを書くぞー</p>

              ]]></content:encoded></item><item><title>HUGOでgistなどの埋め込みを実現させる</title><link>https://kodawari.info/posts/hugo%E3%81%A7gist%E3%81%AA%E3%81%A9%E3%81%AE%E5%9F%8B%E3%82%81%E8%BE%BC%E3%81%BF%E3%82%92%E5%AE%9F%E7%8F%BE%E3%81%95%E3%81%9B%E3%82%8B/</link><pubDate>Wed, 15 Feb 2023 09:47:32 +0900</pubDate><guid>https://kodawari.info/posts/hugo%E3%81%A7gist%E3%81%AA%E3%81%A9%E3%81%AE%E5%9F%8B%E3%82%81%E8%BE%BC%E3%81%BF%E3%82%92%E5%AE%9F%E7%8F%BE%E3%81%95%E3%81%9B%E3%82%8B/</guid><description>大分久しぶりの更新 ドキュメントのここに載ってますね。 gist {{&amp;lt; gist [[ユーザー名]] [[コード]] &amp;gt;}} 例 https://gist.github.com/tama-jp/cfb018852412af5882428b19003c5ca9 であれば、 {{&amp;lt; gist tama-jp cfb018852412af5882428b19003c5ca9 &amp;gt;}} 表示 Tweet {{&amp;lt; gist [[ユーザー名</description><content:encoded><![CDATA[
              <p>大分久しぶりの更新</p>
<p>ドキュメントの<a href="https://gohugo.io/content-management/shortcodes/">ここ</a>に載ってますね。</p>
<h3 id="gist">gist</h3>
<pre tabindex="0"><code>{{&lt; gist [[ユーザー名]] [[コード]] &gt;}}
</code></pre><h4 id="例">例</h4>
<p><a href="https://gist.github.com/tama-jp/cfb018852412af5882428b19003c5ca9">https://gist.github.com/tama-jp/cfb018852412af5882428b19003c5ca9</a></p>
<p>であれば、</p>
<pre tabindex="0"><code>{{&lt; gist tama-jp cfb018852412af5882428b19003c5ca9 &gt;}}
</code></pre><p>表示</p>
<script type="application/javascript" src="https://gist.github.com/tama-jp/cfb018852412af5882428b19003c5ca9.js"></script>

<h3 id="tweet">Tweet</h3>
<pre tabindex="0"><code>{{&lt; gist [[ユーザー名]] [[コード]] &gt;}}
</code></pre><h4 id="例-1">例</h4>
<p><a href="https://twitter.com/pain_ame/status/1625641271137292288?s=20&amp;t=GHSkw_zCyhNgjm1zBytAiw">https://twitter.com/pain_ame/status/1625641271137292288?s=20&amp;t=GHSkw_zCyhNgjm1zBytAiw</a></p>
<p>であれば、</p>
<pre tabindex="0"><code>{{&lt; tweet user=&#34;pain_ame&#34; id=&#34;1453110110599868418&#34; &gt;}}
</code></pre><p>表示</p>
<blockquote class="twitter-tweet"><p lang="ja" dir="ltr">みなさーん、おパよーございまーっす( ´▽｀)ﾉｼ</p>&mdash; パインアメの【パイン株式会社】（公式）🍍 (@pain_ame) <a href="https://twitter.com/pain_ame/status/1625641271137292288?ref_src=twsrc%5Etfw">February 14, 2023</a></blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>


<h3 id="youtube動画">YouTube動画</h3>
<pre tabindex="0"><code>{{&lt; youtube [[コード]] &gt;}}
</code></pre><h4 id="例-2">例</h4>
<p><a href="https://www.youtube.com/watch?v=mXwUKQh8SbU">https://www.youtube.com/watch?v=mXwUKQh8SbU</a></p>
<p>であれば、</p>
<pre tabindex="0"><code>{{&lt; youtube id=&#34;mXwUKQh8SbU&#34; autoplay=&#34;true&#34; &gt;}}
</code></pre><p>表示</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/mXwUKQh8SbU?autoplay=1" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>


              ]]></content:encoded></item><item><title>cuiをMacでアプリ化する為のファイル構成</title><link>https://kodawari.info/posts/cui%E3%82%92mac%E3%81%A7%E3%82%A2%E3%83%97%E3%83%AA%E5%8C%96%E3%81%99%E3%82%8B%E7%82%BA%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%A7%8B%E6%88%90/</link><pubDate>Wed, 27 Jul 2022 14:54:26 +0900</pubDate><guid>https://kodawari.info/posts/cui%E3%82%92mac%E3%81%A7%E3%82%A2%E3%83%97%E3%83%AA%E5%8C%96%E3%81%99%E3%82%8B%E7%82%BA%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%A7%8B%E6%88%90/</guid><description>亀屋BLOGさんのPC-98えみゅでCUI版PC98エミュの紹介がされていたのでコンパイルして見たら、動いた！！ それで、これいちいち動かすの</description><content:encoded><![CDATA[
              <p><a href="http://kameya-z.way-nifty.com/blog/">亀屋BLOG</a>さんの<a href="http://kameya-z.way-nifty.com/blog/2021/10/post-1bd017.html">PC-98えみゅ</a>でCUI版PC98エミュの紹介がされていたのでコンパイルして見たら、動いた！！</p>
<p>それで、これいちいち動かすのにコマンドラインからたたくのも面倒だと思い、アプリ化する方法を調べてたのでまとめておく。</p>
<h2 id="フォルダ構成">フォルダ構成</h2>
<p>フォルダ構成はこんな感じ</p>
<pre tabindex="0"><code>np2
└── Contents
├── Info.plist
├── MacOS
│   └── sdlnp21kai &lt;- バイナリ
└── Resources
	└── np2.icns --- アイコン48×48
</code></pre><h2 id="file">File</h2>
<h3 id="infoplist">Info.plist</h3>
<pre tabindex="0"><code>&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;!DOCTYPE plist PUBLIC &#34;-//Apple//DTD PLIST 1.0//EN&#34; &#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#34;&gt;
&lt;plist version=&#34;1.0&#34;&gt;
&lt;dict&gt;
	&lt;key&gt;CFBundleSignature&lt;/key&gt;
	&lt;string&gt;????&lt;/string&gt;
	&lt;key&gt;CFBundlePackageType&lt;/key&gt;
	&lt;string&gt;APPL&lt;/string&gt;
	&lt;key&gt;CFBundleVersion&lt;/key&gt;
	&lt;string&gt;1.0&lt;/string&gt;
	&lt;key&gt;CFBundleExecutable&lt;/key&gt;
	&lt;string&gt;sdlnp21kai&lt;/string&gt;
	&lt;key&gt;CFBundleDisplayName&lt;/key&gt;
	&lt;string&gt;np2&lt;/string&gt;
	&lt;key&gt;CFBundleName&lt;/key&gt;
	&lt;string&gt;np2&lt;/string&gt;
&lt;/dict&gt;
&lt;/plist&gt;
</code></pre><h4 id="一覧">一覧</h4>
<table>
<thead>
<tr>
<th>キー</th>
<th>型</th>
<th>概要</th>
</tr>
</thead>
<tbody>
<tr>
<td>CFBundleSignature</td>
<td>String</td>
<td>バンドルのクリエータを識別する四文字コードです</td>
</tr>
<tr>
<td>CFBundlePackageType</td>
<td>String</td>
<td>バンドルのタイプを識別する、四文字のコードです。</td>
</tr>
<tr>
<td>CFBundleVersion</td>
<td>String</td>
<td>バンドルのためのビルドバージョン番号です。</td>
</tr>
<tr>
<td>CFBundleExecutable</td>
<td>String</td>
<td>バンドル実行可能ファイルの名前です。</td>
</tr>
<tr>
<td>CFBundleDisplayName</td>
<td>String</td>
<td>バンドルの実際の名前です。</td>
</tr>
<tr>
<td>CFBundleName</td>
<td>String</td>
<td>バンドルの短縮表示名です。</td>
</tr>
</tbody>
</table>
<h4 id="詳細">詳細</h4>
<h5 id="cfbundlesignature">CFBundleSignature</h5>
<p>このキーは、バンドルのクリエータを識別し、Mac OS 9 のファイルクリエータコードと類似しています。このキーの値は、バンドルを指定する四文字のコードを含む文字列です。たとえば、テキストエディット アプリケーションのためのシグネチャは、ttxt です。</p>
<h5 id="cfbundlepackagetype">CFBundlePackageType</h5>
<p>このキーは、バンドルのタイプを識別し、Mac OS 9 のファイルタイプコードに類似しています。</p>
<p>このキーの値は四文字のコードから構成されています。アプリケーションに対するタイプコードは APPL、フレームワークは FMWK、読み込み可能バンドルは BNDL となります。読み込み可能バンドルについては、あなたが望むのであれば、 BNDL よりももっと具体的なタイプコードを選択することもできます。</p>
<h5 id="cfbundleversion">CFBundleVersion</h5>
<p>このキーは、バンドルの（リリースされた、またはリリースされていない）回数を識別する、バンドルのビルドバージョン番号【build version number】を指定します。【注：「CFBundleShortVersionString」の方は、「リリース」バージョン番号。】</p>
<p>これは、一つかそれ以上のピリオドで区切られた整数から構成される、単調増加文字列です。このキーは各国語化できません。</p>
<h5 id="cfbundleexecutable">CFBundleExecutable</h5>
<p>このキーはバンドルの主な実行可能ファイルの名前を識別します。</p>
<p>アプリケーションの場合、これはアプリケーション実行可能ファイルとなります。</p>
<p>読み込み可能バンドル【loadable bundle】の場合、これはバンドルによって動的に読み込まれるバイナリとなります。</p>
<p>フレームワークの場合、これはフレームワークのための共有ライブラリとなります。</p>
<p>Xcode は、このキーを自動的に、適切なプロジェクトのインフォメーションプロパティリスト ファイルへ追加します。</p>
<p>フレームワークの場合、このキーの値はフレームワーク名から .framework 拡張子を除いたものと同一にする必要があります。もしキーが同じでないと、目標のシステムは起動性能に関する理由のために、起動性能のペナルティを引き起こすことがあります。</p>
<p>値には、名前にいかなる拡張子も含めるべきではありません。</p>
<h5 id="cfbundledisplayname">CFBundleDisplayName</h5>
<p>このキーは、バンドルの表示名を指定します。もしあなたのバンドルの各国語化された名前に対応するのであれば、あなたのインフォメーションプロパティリスト ファイルと、あなたの言語サブディレクトリの InfoPlist.strings ファイルの両方にこのキーを含めてください。</p>
<p>もしあなたがこのキーを各国語化するのであれば、CFBundleName キー【バンドルの短縮名】の各国語化バージョンも含めるべきでしょう。</p>
<p>もし、あなたのバンドルを各国語化することを意図していなければ、このキーをあなたのInfo.plist ファイルに含めてはいけません。このキーを含むことは、バンドル名の表示には影響を与えませんが、このキーの各国語化されたバージョンを捜すための性能上のペナルティを引き起こします。</p>
<p>あなたのバンドルの各国語化された名前を表示する前に、Finder はこのキーの値を、ファイルシステムにおけるあなたのバンドルの実際の名前と比較します。</p>
<p>もし二つの名前が一致すれば、Finder はあなたのバンドルの適切な InfoPlist.strings ファイルからの各国語化された名前の表示を続行します。</p>
<p>もし一致しなければ【たとえばユーザの手によりアプリケーションバンドルの名前が変更された場合】、Finderはファイルシステムにおける名前を表示します。</p>
<h5 id="cfbundlename">CFBundleName</h5>
<p>このキーは、バンドルの短縮名を識別します。この名前は長さを16文字以下とし、メニューバーやアプリケーションの情報ウインドウにおける表示のために適切なものとする必要があります。</p>
<p>あなたは、このキーに対する各国語化された値を提供するために、適切な .lproj サブディレクトリの InfoPlist.strings ファイル内にこのキーを含めることができます。</p>
<p>もしこのキーを各国語化するのであれば、「CFBundleDisplayName」キー【バンドルの短縮していない名前】も含めるべきでしょう。</p>
<p>参考：
<a href="http://potting.syuriken.jp/potting_conv/BPRuntimeConfig_J/chapter1.html">http://potting.syuriken.jp/potting_conv/BPRuntimeConfig_J/chapter1.html</a></p>

              ]]></content:encoded></item><item><title>Google画像をスクレイピングしてみよう！！</title><link>https://kodawari.info/posts/google%E7%94%BB%E5%83%8F%E3%82%92%E3%82%B9%E3%82%AF%E3%83%AC%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86/</link><pubDate>Tue, 05 Jul 2022 12:07:08 +0900</pubDate><guid>https://kodawari.info/posts/google%E7%94%BB%E5%83%8F%E3%82%92%E3%82%B9%E3%82%AF%E3%83%AC%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0%E3%81%97%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86/</guid><description>※ 過去に書いた記事を載せています。今動作するかは不明。。。。 すみっコぐらしをめっちゃ好きでLineスタンプはすべてコンプリートしています*.</description><content:encoded><![CDATA[
              <p>※ 過去に書いた記事を載せています。今動作するかは不明。。。。</p>
<p>すみっコぐらしをめっちゃ好きでLineスタンプはすべてコンプリートしています*.⋆( ˘̴͈́ ॢ꒵ॢ ˘̴͈̀ )⋆.*
それは置いといて。。。。 ＼(･<em>＼)ｿﾉﾊﾅｼﾊ (／</em>･)／ｺｯﾁﾆｵｲﾄｲﾃ</p>
<p>PCに自動的に壁紙にするのも良いよなー、でもわざわざ探すのも面倒だしなーってことで、
画像スクレイピングで、すみっコぐらしを取得しよう！！っと思い紹介。</p>
<p>さて、はじめに、画像を取るにしても元ネタを探さなければなりません。
こういうときには、Google先生がいるではありませんか！！</p>
<p>そこから、画像を抜き出していけば、《《《《♪♪(<em>´▽｀</em>)ノ゛うふふ〜</p>
<p>それじゃ、初めてみましょうか。</p>
<p>まず、Google画像検索を開いて。</p>
<pre tabindex="0"><code>https://www.google.co.jp/imghp?hl=ja
</code></pre><p>に、キーワード「すみっコぐらし」を入れて見る</p>
<p>以下のようなアドレスが出て、Bodyには画像がいっぱい。</p>
<pre tabindex="0"><code>https://www.google.co.jp/search?hl=ja&amp;tbm=isch&amp;source=hp&amp;biw=1588&amp;bih=906&amp;ei=k31FW5m7DMW90gTgjIzQCA&amp;q=%E3%81%99%E3%81%BF%E3%81%A3%E3%82%B3%E3%81%90%E3%82%89%E3%81%97&amp;oq=%E3%81%99%E3%81%BF%E3%81%A3%E3%82%B3%E3%81%90%E3%82%89%E3%81%97&amp;gs_l=img.3..0i4k1j0j0i4k1l8.28705.29989.0.30812.5.5.0.0.0.0.172.596.2j3.5.0....0...1ac.1j4.64.img..1.4.510....0.FRb11i-VRo8
</code></pre><p>引数がいっぱいあるけど、必要でなさそうなのは削除してみる。。。。</p>
<p>以下を、たたいてみても問題なく取得できそう。</p>
<pre tabindex="0"><code>https://www.google.co.jp/search?hl=ja&amp;tbm=isch&amp;q=%E3%81%99%E3%81%BF%E3%81%A3%E3%82%B3%E3%81%90%E3%82%89%E3%81%97
</code></pre><p>ちなみに、これをURLデコードすると</p>
<pre tabindex="0"><code>https://www.google.co.jp/search?tbm=isch&amp;q=すみっコぐらし
</code></pre><p>となる</p>
<p>これをたたいてHTMLを取得します。
取得できるものをChromeやFireFoxでHTMLの中を見ると以下のようになっていると思います。</p>
<p><img src="../img/%E3%82%B9%E3%82%AF%E3%83%AC%E3%82%A4%E3%83%94%E3%83%B3%E3%82%B0.png" alt="スクレイピング.png"></p>
<p>classタグの「rg_meta notranslate」てのがありますね。
たぶんこれがでサイトの細かいデータのようです。</p>
<p>これを一部取りだして見てみましょう。。。。</p>
<pre tabindex="0"><code>{&#34;id&#34;:&#34;wWMIkItAEKJTEM:&#34;,&#34;isu&#34;:&#34;books.rakuten.co.jp&#34;,&#34;itg&#34;:0,&#34;ity&#34;:&#34;jpg&#34;,&#34;oh&#34;:640,&#34;ou&#34;:&#34;https://shop.r10s.jp/book/cabinet/5768/9784092895768.jpg&#34;,&#34;ow&#34;:435,&#34;pt&#34;:&#34;楽天ブックス: すみっコぐらしストーリーズ - ひみつのすみっコ生活 ...&#34;,&#34;rh&#34;:&#34;books.rakuten.co.jp&#34;,&#34;rid&#34;:&#34;2AQKjtQM7vPpdM&#34;,&#34;rt&#34;:0,&#34;ru&#34;:&#34;https://books.rakuten.co.jp/rb/13222030/&#34;,&#34;s&#34;:&#34;すみっコぐらしストーリーズ[せきちさと]&#34;,&#34;sc&#34;:1,&#34;st&#34;:&#34;楽天ブックス - 楽天市場&#34;,&#34;th&#34;:272,&#34;tu&#34;:&#34;https://encrypted-tbn0.gstatic.com/images?q\u003dtbn:ANd9GcQBWnTHJQlhwZRDvPN4jRhT5KxV6QkCjgPner8OwAmEj0fV7E8t&#34;,&#34;tw&#34;:185}
</code></pre><p>んん？JSONですね。整形してみると。。。。</p>
<pre tabindex="0"><code>{
  &#34;id&#34; : &#34;wWMIkItAEKJTEM:&#34;,
  &#34;isu&#34; : &#34;books.rakuten.co.jp&#34;,
  &#34;itg&#34; : 0,
  &#34;ity&#34; : &#34;jpg&#34;,
  &#34;oh&#34; : 640,
  &#34;ou&#34; : &#34;https://shop.r10s.jp/book/cabinet/5768/9784092895768.jpg&#34;,
  &#34;ow&#34; : 435,
  &#34;pt&#34; : &#34;楽天ブックス: すみっコぐらしストーリーズ - ひみつのすみっコ生活 ...&#34;,
  &#34;rh&#34; : &#34;books.rakuten.co.jp&#34;,
  &#34;rid&#34; : &#34;2AQKjtQM7vPpdM&#34;,
  &#34;rt&#34; : 0,
  &#34;ru&#34; : &#34;https://books.rakuten.co.jp/rb/13222030/&#34;,
  &#34;s&#34; : &#34;すみっコぐらしストーリーズ[せきちさと]&#34;,
  &#34;sc&#34; : 1,
  &#34;st&#34; : &#34;楽天ブックス - 楽天市場&#34;,
  &#34;th&#34; : 272,
  &#34;tu&#34; : &#34;https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQBWnTHJQlhwZRDvPN4jRhT5KxV6QkCjgPner8OwAmEj0fV7E8t&#34;,
  &#34;tw&#34; : 185
}
</code></pre><p>URLが入っているのは、「ou」、「ru」、「tu」かな？</p>
<p>「tu」は、</p>
<pre tabindex="0"><code>https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQBWnTHJQlhwZRDvPN4jRhT5KxV6QkCjgPner8OwAmEj0fV7E8t
</code></pre><p>googleさんがつくったサムネイル画像みたいですね。</p>
<p>「ru」は、</p>
<pre tabindex="0"><code>https://books.rakuten.co.jp/rb/13222030/
</code></pre><p>置いている元サイトかな？画像じゃないね。</p>
<p>「ou」は、</p>
<pre tabindex="0"><code>https://shop.r10s.jp/book/cabinet/5768/9784092895768.jpg
</code></pre><p>たぶんこれが、画像ですね。！！</p>
<p>これをダウンロードすればいいです。</p>
<p>それで、手順を簡単に書くと</p>
<ol>
<li><a href="https://www.google.co.jp/imghp">google画像検索</a>にキーワードを入れてアクセスする</li>
<li>取得できたHTMLで、classタグの「rg_meta notranslate」を配列で抜き出す。</li>
<li>そこから、「ou」というタグを見つけてその中のURLを取得</li>
<li>画像を保存</li>
</ol>
<p>これだけの、かーんたーんなお・し・ご・と！！（⌒^⌒)ｂうふっ</p>
<p>実際に、Python3でこれを組んでみました。
一度ためしてみてください。
走り書きで書いたのでフォーマットぐちゃぐちゃです。ごめんなさいｍ（＿＿）ｍ</p>
<pre tabindex="0"><code>#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Created on 2018/07/13.

import os
from urllib import request as req
from urllib import error
from urllib import parse
import bs4
# pip3 install bs4
from datetime import datetime

import re

keyword =&#39;すみっコぐらし&#39;
subPath = &#34;./&#34;

print(&#34;--- Start ---&#34;)
print(&#34;--- &#34; + keyword + &#34;画像ダウンロード&#34; + &#34; ---&#34;)
print(datetime.now().strftime(&#34;%Y/%m/%d %H:%M:%S&#34;))

print(&#34;--- ディレクトリ作成 ---&#34;)
keywordPath=subPath + keyword

if not os.path.exists(subPath):
	os.mkdir(subPath)

if not os.path.exists(keywordPath):
	os.mkdir(keywordPath)

print(&#34;--- google画像情報サイト取得 ---&#34;)

urlKeyword = parse.quote(keyword)
url = &#39;https://www.google.co.jp/search?tbm=isch&amp;q=&#39; + urlKeyword + &#39;&#39;

headers = {&#34;User-Agent&#34;: &#34;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0&#34;,}
request = req.Request(url=url, headers=headers)
page = req.urlopen(request)

print(&#34;--- データパース ---&#34;)
html = page.read().decode(&#39;utf-8&#39;)
html = bs4.BeautifulSoup(html, &#34;html.parser&#34;)
elems = html.select(&#39;.rg_meta.notranslate&#39;)

print(&#34;--- 画像取得 ---&#34;)

counter = 0
for ele in elems:
	ele = ele.contents[0].replace(&#39;&#34;&#39;,&#39;&#39;).split(&#39;,&#39;)
	eledict = dict()

	# ou:のついているものが画像本体なのでそれを取り出す
	for e in ele:
		num = e.find(&#39;:&#39;)
		eledict[e[0:num]] = e[num+1:]
	imageURL = eledict[&#39;ou&#39;]
	
	pal = &#39;jpg&#39;
	if &#39;.jpg&#39; in imageURL:
		pal = &#39;.jpg&#39;
	elif &#39;.JPG&#39; in imageURL:
		pal = &#39;.jpg&#39;
	elif &#39;.png&#39; in imageURL:
		pal = &#39;.png&#39;
	elif &#39;.gif&#39; in imageURL:
		pal = &#39;.gif&#39;
	elif &#39;.jpeg&#39; in imageURL:
		pal = &#39;.jpeg&#39;
	else:
		pal = &#39;.jpg&#39;

	counter += 1
	fileName=keywordPath+ &#39;/&#39; + keyword + str(counter)+pal

	try:
		# 画像取得
		img = req.urlopen(imageURL)
		localfile = open(fileName, &#39;wb&#39;)
		localfile.write(img.read())
		img.close()
		localfile.close()
	except :
		#エラーの場合は次のデータを取得
		continue
		
print(datetime.now().strftime(&#34;%Y/%m/%d %H:%M:%S&#34;))
print(&#34;--- End ---&#34;)
</code></pre><p>今回は短いですけどこんなんでw</p>

              ]]></content:encoded></item><item><title>Macの設定（超適当）</title><link>https://kodawari.info/posts/mac%E3%81%AE%E8%A8%AD%E5%AE%9A%E8%B6%85%E9%81%A9%E5%BD%93/</link><pubDate>Mon, 04 Jul 2022 17:28:43 +0900</pubDate><guid>https://kodawari.info/posts/mac%E3%81%AE%E8%A8%AD%E5%AE%9A%E8%B6%85%E9%81%A9%E5%BD%93/</guid><description>雑な書き方だけどMacのインストールのファイルなどを公開 Homebrewのインストール 以下のファイルの内容() Brewfile tap &amp;#34;homebrew/bundle&amp;#34; tap &amp;#34;homebrew/cask&amp;#34; tap &amp;#34;homebrew/cask-fonts&amp;#34; tap &amp;#34;homebrew/core&amp;#34; brew &amp;#34;cloc&amp;#34; brew &amp;#34;colordiff&amp;#34; brew &amp;#34;coreutils&amp;#34;</description><content:encoded><![CDATA[
              <p>雑な書き方だけどMacのインストールのファイルなどを公開</p>
<h2 id="homebrewのインストール">Homebrewのインストール</h2>
<p>以下のファイルの内容()</p>
<p>Brewfile</p>
<pre tabindex="0"><code>tap &#34;homebrew/bundle&#34;
tap &#34;homebrew/cask&#34;
tap &#34;homebrew/cask-fonts&#34;
tap &#34;homebrew/core&#34;
brew &#34;cloc&#34;
brew &#34;colordiff&#34;
brew &#34;coreutils&#34;
brew &#34;curl&#34;
brew &#34;ffmpeg&#34;
brew &#34;gnu-sed&#34;
brew &#34;go&#34;
brew &#34;graphviz&#34;
brew &#34;htop&#34;
brew &#34;hugo&#34;
brew &#34;jq&#34;
brew &#34;mas&#34;
brew &#34;nkf&#34;
brew &#34;nodebrew&#34;
brew &#34;pandoc&#34;
brew &#34;plantuml&#34;
brew &#34;starship&#34;
brew &#34;tree&#34;
brew &#34;wget&#34;
brew &#34;yarn&#34;
brew &#34;yt-dlp&#34;
brew &#34;zsh-autosuggestions&#34;
brew &#34;zsh-completions&#34;
brew &#34;zsh-syntax-highlighting&#34;
cask &#34;adobe-acrobat-reader&#34;
cask &#34;alfred&#34;
cask &#34;apparency&#34;
cask &#34;astah-professional&#34;
cask &#34;atok&#34;
cask &#34;bbedit&#34;
cask &#34;bettertouchtool&#34;
cask &#34;beyond-compare&#34;
cask &#34;bootstrap-studio&#34;
cask &#34;brave-browser&#34;
cask &#34;brooklyn&#34;
cask &#34;browserosaurus&#34;
cask &#34;calibre&#34;
cask &#34;coderunner&#34;
cask &#34;dash&#34;
cask &#34;docker&#34;
cask &#34;drawio&#34;
cask &#34;firefox&#34;
cask &#34;font-ricty-diminished&#34;
cask &#34;google-chrome&#34;
cask &#34;gyazmail&#34;
cask &#34;istat-menus&#34;
cask &#34;iterm2&#34;
cask &#34;jedit-omega&#34;
cask &#34;jetbrains-toolbox&#34;
cask &#34;joplin&#34;
cask &#34;kaleidoscope&#34;
cask &#34;mamp&#34;
cask &#34;openinterminal&#34;
cask &#34;path-finder&#34;
cask &#34;paw&#34;
cask &#34;qlcolorcode&#34;
cask &#34;qlimagesize&#34;
cask &#34;qlmarkdown&#34;
cask &#34;qlprettypatch&#34;
cask &#34;qlstephen&#34;
cask &#34;qlvideo&#34;
cask &#34;quicklook-csv&#34;
cask &#34;quicklook-json&#34;
cask &#34;quicklookapk&#34;
cask &#34;quicklookase&#34;
cask &#34;smartgit&#34;
cask &#34;stoplight-studio&#34;
cask &#34;sublime-text&#34;
cask &#34;suspicious-package&#34;
cask &#34;syntax-highlight&#34;
cask &#34;transmit&#34;
cask &#34;typora&#34;
cask &#34;vivaldi&#34;
cask &#34;webpquicklook&#34;
cask &#34;zoc&#34;
mas &#34;Affinity Designer&#34;, id: 824171161
mas &#34;Display Menu&#34;, id: 549083868
mas &#34;Graphic&#34;, id: 404705039
mas &#34;GraphicConverter 11&#34;, id: 1465576485
mas &#34;Hidden Bar&#34;, id: 1452453066
mas &#34;Keka&#34;, id: 470158793
mas &#34;LINE&#34;, id: 539883307
mas &#34;Microsoft Excel&#34;, id: 462058435
mas &#34;Microsoft PowerPoint&#34;, id: 462062816
mas &#34;OmniPlan&#34;, id: 1460319993
mas &#34;Peek&#34;, id: 1554235898
mas &#34;Pixelmator Pro&#34;, id: 1289583905
mas &#34;Power JSON Editor&#34;, id: 499768540
mas &#34;QREncoderPro&#34;, id: 479397466
mas &#34;RunCat&#34;, id: 1429033973
mas &#34;SimpleMind Pro&#34;, id: 434808346
mas &#34;Xcode&#34;, id: 497799835
mas &#34;デスクトップ時計 +&#34;, id: 892038932
</code></pre><h2 id="zshrc">zshrc</h2>
<p>~/.zshrc</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 基本的な環境変数</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>export LANG<span style="color:#f92672">=</span>ja_JP.UTF-8
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>export EDITOR<span style="color:#f92672">=</span>vim
</span></span><span style="display:flex;"><span>export PAGER<span style="color:#f92672">=</span>lv
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Python venv</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> -e venv/bin/activate <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># 存在する場合</span>
</span></span><span style="display:flex;"><span>    source venv/bin/activate
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">fi</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># alias</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span>alias brew<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin brew&#39;</span> 
</span></span><span style="display:flex;"><span>alias ls<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;ls -G&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>alias brew<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin brew&#39;</span>
</span></span><span style="display:flex;"><span>alias sed<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;gsed&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>alias clean<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;rm -rf ~/Library/Developer/Xcode/DerivedData&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>alias diff<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;colordiff&#39;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>alias vi<span style="color:#f92672">=</span>vim
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 環境変数</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># --------------------------------------------------------------------</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># path</span>
</span></span><span style="display:flex;"><span>export PATH<span style="color:#f92672">=</span>/usr/local/bin:/usr/local/sbin:/usr/sbin:/sbin:$PATH
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># starship</span>
</span></span><span style="display:flex;"><span>eval <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>starship init zsh<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># android</span>
</span></span><span style="display:flex;"><span>export ANDROID_NDK_ROOT<span style="color:#f92672">=</span>$HOME/Library/Android/sdk/ndk/24.0.8215888
</span></span><span style="display:flex;"><span>export ANDROID_NDK_HOME<span style="color:#f92672">=</span>$HOME/Library/Android/sdk/ndk/24.0.8215888
</span></span><span style="display:flex;"><span>export ANDROID_HOME<span style="color:#f92672">=</span>$HOME/Library/Android/sdk
</span></span><span style="display:flex;"><span>export PATH<span style="color:#f92672">=</span>$ANDROID_HOME/bin:$PATH:<span style="color:#e6db74">${</span>HOME<span style="color:#e6db74">}</span>/Library/Android/sdk/platform-tools:$HOME/Library/Android/sdk/tools/bin
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># plantuml</span>
</span></span><span style="display:flex;"><span>export PLANTUML_LIMIT_SIZE<span style="color:#f92672">=</span><span style="color:#ae81ff">32768</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># nodebrew</span>
</span></span><span style="display:flex;"><span>export PATH<span style="color:#f92672">=</span>$HOME/.nodebrew/current/bin:$PATH
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># homebrew</span>
</span></span><span style="display:flex;"><span>export PATH<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/usr/local/sbin:</span>$PATH<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># zsh関連</span>
</span></span><span style="display:flex;"><span>source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
</span></span><span style="display:flex;"><span>source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> type brew &amp;&gt;/dev/null; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span>    FPATH<span style="color:#f92672">=</span>/usr/local/share/zsh-completions:/usr/local/share/zsh/site-functions:/usr/share/zsh/site-functions:/usr/share/zsh/5.8.1/functions
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    autoload -Uz compinit
</span></span><span style="display:flex;"><span>    compinit
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">fi</span>
</span></span></code></pre></div><h2 id="starshipの設定">starshipの設定</h2>
<p>mkdir -p ~/.config &amp;&amp; touch ~/.config/starship.toml</p>
<pre tabindex="0"><code>[directory]
#ディレクトリ表示
truncation_length = 100
truncate_to_repo = false

[memory_usage]
disabled = false
threshold = -1
symbol = &#34; &#34;
style = &#34;bold dimmed blue&#34;
format = &#34;$symbol[${ram}( | ${swap})]($style) &#34;


[battery]
full_symbol = &#34;🔋&#34;
charging_symbol = &#34;🔌&#34;
discharging_symbol = &#34;⚡&#34;

[[battery.display]]
#バッテリーを表示するタイミング、表示する際の文字のスタイル
threshold = 100
style = &#34;bold blue&#34;

[time]
#時間の表示をオンにして12時間表示に
use_12hr = false
time_format = &#34;%T&#34;
format = &#34;🕙 $time($style) &#34;
style = &#34;bright-white&#34;
disabled = false


[package]
disabled = true

[cmd_duration]
min_time = 10_000  # Show command duration over 10,000 milliseconds (=10 sec)
format = &#34; took [$duration]($style)&#34;

[character]
success_symbol = &#34;[➜](bold green) &#34;
error_symbol = &#34;[✗](bold red) &#34;

[git_branch]
format = &#34; [$symbol$branch]($style) &#34;
symbol = &#34;🍣 &#34;
style = &#34;bold yellow&#34;

[git_commit]
commit_hash_length = 8
style = &#34;bold white&#34;

[git_state]
format = &#39;[\($state( $progress_current of $progress_total)\)]($style) &#39;

[git_status]
conflicted = &#34;⚔️ &#34;
ahead = &#34;🏎️ 💨 ×${count}&#34;
behind = &#34;🐢 ×${count}&#34;
diverged = &#34;🔱 🏎️ 💨 ×${ahead_count} 🐢 ×${behind_count}&#34;
untracked = &#34;🛤️  ×${count}&#34;
stashed = &#34;📦 &#34;
modified = &#34;📝 ×${count}&#34;
staged = &#34;🗃️  ×${count}&#34;
renamed = &#34;📛 ×${count}&#34;
deleted = &#34;🗑️  ×${count}&#34;
style = &#34;bright-white&#34;
format = &#34;$all_status$ahead_behind&#34;

[python]
format = &#34;[$symbol$version]($style) &#34;
style = &#34;bold green&#34;

[rust]
format = &#34;[$symbol$version]($style) &#34;
style = &#34;bold green&#34;

[username]
style_user = &#34;bold dimmed blue&#34;
show_always = false
</code></pre>
              ]]></content:encoded></item><item><title>HUGOの画像の置き方</title><link>https://kodawari.info/posts/hugo%E3%81%AE%E7%94%BB%E5%83%8F%E3%81%AE%E7%BD%AE%E3%81%8D%E6%96%B9/</link><pubDate>Mon, 06 Jun 2022 16:51:49 +0900</pubDate><guid>https://kodawari.info/posts/hugo%E3%81%AE%E7%94%BB%E5%83%8F%E3%81%AE%E7%BD%AE%E3%81%8D%E6%96%B9/</guid><description>どうやら、ファイル名が変換されてフォルダ名として扱っちゃうみたいなので、 同じディレクトリ内なら ![代替テキスト](../thank_you.</description><content:encoded><![CDATA[
              <p>どうやら、ファイル名が変換されてフォルダ名として扱っちゃうみたいなので、
同じディレクトリ内なら</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>![<span style="color:#f92672">代替テキスト</span>](<span style="color:#a6e22e">../thank_you.png</span>)
</span></span></code></pre></div><p>↓</p>
<p><img src="../thank_you.png" alt="代替テキスト"></p>
<p>一つ下なら</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span>![<span style="color:#f92672">代替テキスト</span>](<span style="color:#a6e22e">../img/sorry.png</span>)
</span></span></code></pre></div><p>↓</p>
<p><img src="../img/sorry.png" alt="代替テキスト"></p>
<p>でなります。</p>

              ]]></content:encoded></item><item><title>初めまして</title><link>https://kodawari.info/posts/2022-06-05-02-43-45-my-first-post/</link><pubDate>Sun, 05 Jun 2022 02:43:45 +0900</pubDate><guid>https://kodawari.info/posts/2022-06-05-02-43-45-my-first-post/</guid><description>たまたんです。久しぶりにブログ再開です。 今回から、 Hugo で作成を挑戦してみます。 よろしくお願いいたします。m(__)m</description><content:encoded><![CDATA[
              <p>たまたんです。久しぶりにブログ再開です。</p>
<p>今回から、 <strong>Hugo</strong> で作成を挑戦してみます。</p>
<p>よろしくお願いいたします。m(__)m</p>

              ]]></content:encoded></item></channel></rss>