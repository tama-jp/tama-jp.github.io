<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>技術 on Ko-Da-Wa-Ri</title><link>https://kodawari.info/categories/%E6%8A%80%E8%A1%93/</link><description>Recent content in 技術 on Ko-Da-Wa-Ri</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Thu, 30 Jun 2022 09:54:44 +0900</lastBuildDate><atom:link href="https://kodawari.info/categories/%E6%8A%80%E8%A1%93/index.xml" rel="self" type="application/rss+xml"/><item><title>UIButtonの文字の設定</title><link>https://kodawari.info/posts/uibutton%E3%81%AE%E6%96%87%E5%AD%97%E3%81%AE%E8%A8%AD%E5%AE%9A/</link><pubDate>Thu, 30 Jun 2022 09:54:44 +0900</pubDate><guid>https://kodawari.info/posts/uibutton%E3%81%AE%E6%96%87%E5%AD%97%E3%81%AE%E8%A8%AD%E5%AE%9A/</guid><description>ボタンの設定 UIButton をコード上で使用することで、ボタンを追加することができます。 追加する時に、各状態になった場合のボタンのタイトル、色などを指定す</description><content:encoded><![CDATA[
              <h1 id="ボタンの設定">ボタンの設定</h1>
<p>UIButton をコード上で使用することで、ボタンを追加することができます。
追加する時に、各状態になった場合のボタンのタイトル、色などを指定することができます。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">//ボタンの宣言
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>UIButton <span style="color:#f92672">*</span>button <span style="color:#f92672">=</span> [[UIButton alloc]init];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//タイトル・テキスト色・画像　通常
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button setTitle:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;ボタン&#34;</span> forState:UIControlStateNormal];
</span></span><span style="display:flex;"><span>[button setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
</span></span><span style="display:flex;"><span>[button setImage:[UIImage imageNamed:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;image&#34;</span>] forState:UIControlStateNormal];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//タイトル・テキスト色・画像　押下中
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button setTitle:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;押下中&#34;</span> forState:UIControlStateHighlighted];
</span></span><span style="display:flex;"><span>[button setTitleColor:[UIColor blackColor] forState:UIControlStateHighlighted];
</span></span><span style="display:flex;"><span>[button setImage:[UIImage imageNamed:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;image&#34;</span>] forState:UIControlStateHighlighted];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//タイトル・テキスト色・画像　選択中
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button setTitle:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;選択中&#34;</span> forState:UIControlStateSelected];
</span></span><span style="display:flex;"><span>[button setTitleColor:[UIColor blackColor] forState:UIControlStateSelected];
</span></span><span style="display:flex;"><span>[button setImage:[UIImage imageNamed:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;image&#34;</span>] forState:UIControlStateSelected];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//タイトル・テキスト色・画像　無効中
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button setTitle:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;無効&#34;</span> forState:UIControlStateDisabled];
</span></span><span style="display:flex;"><span>[button setTitleColor:[UIColor blackColor] forState:UIControlStateDisabled];
</span></span><span style="display:flex;"><span>[button setImage:[UIImage imageNamed:<span style="color:#960050;background-color:#1e0010">@</span><span style="color:#e6db74">&#34;image&#34;</span>] forState:UIControlStateDisabled];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//フォントサイズ
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button.titleLabel setFont:[UIFont systemFontOfSize:<span style="color:#ae81ff">30</span>]];
</span></span><span style="display:flex;"><span><span style="color:#75715e">//背景色
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button setBackgroundColor:[UIColor redColor]];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">//画面に追加
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[self.view addSubview:button];
</span></span></code></pre></div><h1 id="枠線の設定">枠線の設定</h1>
<p>枠線の色は setBorderColor 、枠線の太さは setBorderWidth 、角丸の丸みは setCornerRadius 、
で指定するができます。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">//枠線の色
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button.layer setBorderColor:[UIColor blackColor].CGColor];
</span></span><span style="display:flex;"><span><span style="color:#75715e">//枠線の太さ
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button.layer setBorderWidth:<span style="color:#ae81ff">2.0</span>];
</span></span><span style="display:flex;"><span><span style="color:#75715e">//角丸の指定
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button.layer setCornerRadius:<span style="color:#ae81ff">5.0</span>];
</span></span></code></pre></div><h1 id="押下時の動作">押下時の動作</h1>
<p>ボタンを選択した時の動作を追加する場合、 -(void)関数名:(UIButton *)button で動作を指定して、
ボタン追加時に addTarget で関数を指定する必要あります。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#75715e">//押下時の動作
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>[button addTarget:self action:<span style="color:#960050;background-color:#1e0010">@</span>selector(button_select:) forControlEvents:UIControlEventTouchUpInside];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">-</span>(<span style="color:#66d9ef">void</span>)button_select:(UIButton <span style="color:#f92672">*</span>)button {
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">//ボタンを選択中に変更する。
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    button.selected <span style="color:#f92672">=</span> true;
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">//ボタンを無効中に変更する
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>    button.enabled <span style="color:#f92672">=</span> false;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h1 id="大きさなどの変更">大きさなどの変更</h1>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>    CGRect frame2 <span style="color:#f92672">=</span> CGRectMake(_overlayView.frame.size.width <span style="color:#f92672">-</span> <span style="color:#ae81ff">40</span>, <span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">40</span>, <span style="color:#ae81ff">40</span>);
</span></span><span style="display:flex;"><span>    self.closeButton.frame <span style="color:#f92672">=</span> frame2;
</span></span></code></pre></div>
              ]]></content:encoded></item><item><title>goプロジェクトを自動でUML図に出力するツール</title><link>https://kodawari.info/posts/go%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E8%87%AA%E5%8B%95%E3%81%A7uml%E5%9B%B3%E3%81%AB%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B%E3%83%84%E3%83%BC%E3%83%AB/</link><pubDate>Tue, 21 Jun 2022 18:20:23 +0900</pubDate><guid>https://kodawari.info/posts/go%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E8%87%AA%E5%8B%95%E3%81%A7uml%E5%9B%B3%E3%81%AB%E5%87%BA%E5%8A%9B%E3%81%99%E3%82%8B%E3%83%84%E3%83%BC%E3%83%AB/</guid><description>go言語のプロジェクトを可視化したいと思いPlantUMLで自動で出来たらなと。 2つ見つけました。 goplantumlとgoumlです。 前者</description><content:encoded><![CDATA[
              <p>go言語のプロジェクトを可視化したいと思いPlantUMLで自動で出来たらなと。</p>
<p>2つ見つけました。</p>
<p><a href="https://github.com/jfeliu007/goplantuml">goplantuml</a>と<a href="https://github.com/kazukousen/gouml">gouml</a>です。</p>
<p>前者の<a href="https://github.com/jfeliu007/goplantuml">goplantuml</a>は、
結構有名でよく紹介されており、メンテが数ヶ月前にされているようです。</p>
<p>後者の<a href="https://github.com/kazukousen/gouml">gouml</a>と言うものですが、数年前から開発がとまっていて、</p>
<p>goのver1.18でコンパイルして実行してみると表示が出来ない部分があったので、</p>
<p>それで、最新のモジュールに差し替えて、みました。
<a href="https://github.com/tama-jp/gouml">こちら</a>にあります。</p>
<p>Macなら以下で動くと思います。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>git clone https://github.com/tama-jp/gouml.git
</span></span><span style="display:flex;"><span>cd gouml/cmd/gouml
</span></span><span style="display:flex;"><span>go build -o /usr/local/bin/gouml main.go
</span></span><span style="display:flex;"><span>gouml --version 
</span></span></code></pre></div><p>このふたつのツールを<a href="https://github.com/sue445/plant_erd">plant_erd</a>という、データベースをplantumlでER図を生成するソースを試しにしてみました。</p>
<p>goplantuml
<img src="../img/2022-06-21-sample.png" alt="2022-06-21-sample.png"></p>
<p>gouml
<img src="../img/2022-06-21-file.png" alt="2022-06-21-file.png"></p>
<p>でかたが違う。。。。(´ヘ｀;)　う〜ん・・・。どちらがいいのかがわかりません。</p>
<p>ただ、goumlは、戻り値にメソッドが使われたときの軌跡はわかるので、個人的にはこっちがいいと感じますが。。。。</p>
<p>皆さんどうしてるんだろ。。。。．</p>

              ]]></content:encoded></item><item><title>時刻ではまった</title><link>https://kodawari.info/posts/2022-06-07-00-19-49-time/</link><pubDate>Tue, 07 Jun 2022 00:19:50 +0000</pubDate><guid>https://kodawari.info/posts/2022-06-07-00-19-49-time/</guid><description>時刻ではまった。。。。 文字列をtime型にしてからunixtimeに入れようとしたら、 timeStr := &amp;#34;2022-06-07 09:00:00&amp;#34; layout := &amp;#34;2006-01-02 15:04:05&amp;#34; timeData, _ = time.Parse(layout, timeStr) fmt.Println(timeData.Unix()) # =&amp;gt; 1654592400 タイムゾーンが、日本</description><content:encoded><![CDATA[
              <p>時刻ではまった。。。。
文字列をtime型にしてからunixtimeに入れようとしたら、</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-golang" data-lang="golang"><span style="display:flex;"><span><span style="color:#a6e22e">timeStr</span> <span style="color:#f92672">:=</span> <span style="color:#e6db74">&#34;2022-06-07 09:00:00&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">layout</span> <span style="color:#f92672">:=</span> <span style="color:#e6db74">&#34;2006-01-02 15:04:05&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">timeData</span>, <span style="color:#a6e22e">_</span> = <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">Parse</span>(<span style="color:#a6e22e">layout</span>, <span style="color:#a6e22e">timeStr</span>)
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">timeData</span>.<span style="color:#a6e22e">Unix</span>()) <span style="color:#960050;background-color:#1e0010">#</span> =&gt; <span style="color:#ae81ff">1654592400</span>
</span></span></code></pre></div><p>タイムゾーンが、日本に設定してないので、UTCになっているみたい。
time.Parseを使用せずに、locationを設定できるtime.ParseInLocationを使用するとうまく行く。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-golang" data-lang="golang"><span style="display:flex;"><span><span style="color:#a6e22e">timeStr</span> <span style="color:#f92672">:=</span> <span style="color:#e6db74">&#34;2022-06-07 09:00:00&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">layout</span> <span style="color:#f92672">:=</span> <span style="color:#e6db74">&#34;2006-01-02 15:04:05&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">tz</span>, <span style="color:#a6e22e">err</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">LoadLocation</span>(<span style="color:#e6db74">&#34;Asia/Tokyo&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> <span style="color:#a6e22e">err</span> <span style="color:#f92672">!=</span> <span style="color:#66d9ef">nil</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">err</span>)
</span></span><span style="display:flex;"><span>    panic(<span style="color:#a6e22e">err</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">timeData</span>, <span style="color:#a6e22e">err</span> <span style="color:#f92672">:=</span> <span style="color:#a6e22e">time</span>.<span style="color:#a6e22e">ParseInLocation</span>(<span style="color:#a6e22e">layout</span>, <span style="color:#a6e22e">str</span>, <span style="color:#a6e22e">tz</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> <span style="color:#a6e22e">err</span> <span style="color:#f92672">!=</span> <span style="color:#66d9ef">nil</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">err</span>)
</span></span><span style="display:flex;"><span>    panic(<span style="color:#a6e22e">err</span>)
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">fmt</span>.<span style="color:#a6e22e">Println</span>(<span style="color:#a6e22e">timeData</span>.<span style="color:#a6e22e">Unix</span>()) <span style="color:#960050;background-color:#1e0010">#</span> =&gt; <span style="color:#ae81ff">1654562457</span>
</span></span></code></pre></div><p>適当に作った関数のおかげで悩んでもうた。。。。。(・∀・)</p>

              ]]></content:encoded></item><item><title>HUGO便利スクリプト</title><link>https://kodawari.info/posts/hugo%E4%BE%BF%E5%88%A9%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88/</link><pubDate>Mon, 06 Jun 2022 14:28:28 +0900</pubDate><guid>https://kodawari.info/posts/hugo%E4%BE%BF%E5%88%A9%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88/</guid><description>HUGOの使い方がようやくわかってきて、今必死ですw コンテントを作成する時 hugo new post/なんたらー.md って、書かなきゃならなく、中身もちょ</description><content:encoded><![CDATA[
              <p>HUGOの使い方がようやくわかってきて、今必死ですw</p>
<p>コンテントを作成する時</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>hugo new post/なんたらー.md
</span></span></code></pre></div><p>って、書かなきゃならなく、中身もちょびちょび書き直さなければならない。
これって面倒ですね。</p>
<p>っで、下のサイトの方がスクリプトを書いてました。便利便利♪</p>
<p><a href="https://techblog.sgr-ksmt.dev/2016/02/05/hugo_new_post/">https://techblog.sgr-ksmt.dev/2016/02/05/hugo_new_post/</a></p>
<ul>
<li>
<p>毎回post/と付けるのを省きたい</p>
</li>
<li>
<p>markdownファイル名の前に日付を付けたい</p>
</li>
</ul>
<p>ホント助かりました。</p>
<p>ただ、記事が古いのか「設定」などが「=」で書かれていてうまく動かなかったので、
直して使ってます。</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#75715e">#!/bin/bash
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>set -u
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>usage<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  echo <span style="color:#e6db74">&#34;Usage : </span>$0<span style="color:#e6db74"> [-w] [title_name]&#34;</span> 1&gt;&amp;<span style="color:#ae81ff">2</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>main <span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  cd <span style="color:#66d9ef">$(</span>cd <span style="color:#66d9ef">$(</span>dirname $0<span style="color:#66d9ef">)</span> <span style="color:#f92672">&amp;&amp;</span> pwd<span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>  OPEN_EDITOR<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">for</span> ARG; <span style="color:#66d9ef">do</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$ARG<span style="color:#e6db74">&#34;</span> in
</span></span><span style="display:flex;"><span>      -*<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">while</span> getopts w OPT <span style="color:#e6db74">&#34;</span>$ARG<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">do</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$OPT<span style="color:#e6db74">&#34;</span> in
</span></span><span style="display:flex;"><span>          w<span style="color:#f92672">)</span> OPEN_EDITOR<span style="color:#f92672">=</span>1;;
</span></span><span style="display:flex;"><span>          *<span style="color:#f92672">)</span> usage; exit 1;;
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">esac</span>
</span></span><span style="display:flex;"><span>      <span style="color:#66d9ef">done</span>
</span></span><span style="display:flex;"><span>      ;;
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">esac</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">done</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  shift <span style="color:#66d9ef">$(</span>expr $OPTIND - 1<span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">[</span> $# -ne <span style="color:#ae81ff">1</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> usage <span style="color:#f92672">&amp;&amp;</span> exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  slug<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>  file_name<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;posts/</span><span style="color:#66d9ef">$(</span>date +<span style="color:#e6db74">&#34;%Y-%m-%d-%H-%M-%S&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">-</span><span style="color:#e6db74">${</span>slug<span style="color:#e6db74">}</span><span style="color:#e6db74">.md&#34;</span>
</span></span><span style="display:flex;"><span>  file_path<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;content/</span>$file_name<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> ! -e <span style="color:#e6db74">&#34;</span>$file_path<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span>    hugo new <span style="color:#e6db74">&#34;</span>$file_name<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>    sed -i <span style="color:#e6db74">&#39;&#39;</span> <span style="color:#e6db74">&#34;s/title: \&#34;.*\&#34;/title: \&#34;</span>$slug<span style="color:#e6db74">\&#34;/g&#34;</span> <span style="color:#e6db74">&#34;</span>$file_path<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>    sed -i <span style="color:#e6db74">&#39;&#39;</span> <span style="color:#e6db74">&#34;s/slug: \&#34;.*\&#34;/slug: \&#34;</span>$slug<span style="color:#e6db74">\&#34;/g&#34;</span> <span style="color:#e6db74">&#34;</span>$file_path<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">else</span>
</span></span><span style="display:flex;"><span>    echo <span style="color:#e6db74">&#34;</span>$file_name<span style="color:#e6db74"> already exists.&#34;</span>
</span></span><span style="display:flex;"><span>  <span style="color:#66d9ef">fi</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">[</span> $OPEN_EDITOR -eq <span style="color:#ae81ff">1</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> atom <span style="color:#e6db74">&#34;</span>$file_path<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>main <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
</span></span></code></pre></div>
              ]]></content:encoded></item><item><title>HUGOのインストール</title><link>https://kodawari.info/posts/hugo%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</link><pubDate>Mon, 06 Jun 2022 14:28:23 +0900</pubDate><guid>https://kodawari.info/posts/hugo%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB/</guid><description>ほぼここを見ればすぐできます。 これに、私は、テーマをMainroadにしました。</description><content:encoded><![CDATA[
              <p>ほぼ<a href="https://gohugo.io/getting-started/quick-start/">ここ</a>を見ればすぐできます。</p>
<p>これに、私は、テーマを<a href="https://github.com/Vimux/Mainroad">Mainroad</a>にしました。</p>

              ]]></content:encoded></item></channel></rss>